<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learn Ruby The Hard Way]]></title>
  <link href="http://lrthw.github.com/atom.xml" rel="self"/>
  <link href="http://lrthw.github.com/"/>
  <updated>2011-10-13T01:08:54+08:00</updated>
  <id>http://lrthw.github.com/</id>
  <author>
    <name><![CDATA[xdite]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一個老程式設計師的建議]]></title>
    <link href="http://lrthw.github.com/advice/"/>
    <updated>2011-07-21T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/advice</id>
    <content type="html"><![CDATA[<p>你已經完成了這本書而且打算繼續寫程式。也許這會成為你的一門職業，也許你只是作為業餘愛好玩玩。無論如何，你都需要一些建議以保證你在正確的道路上繼續前行，並且讓這項新的愛好為你帶來最大程度的享受。</p>

<p>我從事寫程式這行已經太長時間，長到對我來說寫程式已經是非常乏味的事情了。我寫這本書的時候，已經懂得大約20 種程式語言，而且可以在大約一天或者一個星期內學會一門程式語言(取決於這門語言有多古怪)。現在對我來說寫程式這件事情已經很無聊，已經談不上什麼興趣了。當然這不是說寫程式本身是一件無聊的事情，也不是說你以後也一定會這樣覺得，這只是我個人在當前的感覺而已。</p>

<p>在這麼久的旅程下來我的體會是：程式語言這東西並不重要，重要的是你用這些語言做的事情。事實上我一直知道這一點，不過以前我會周期性地被各種程式語言分神而忘記了這一點。現在我是永遠不會忘記這一點了，你也不應該忘記這一點。</p>

<p>你學到和用到的程式語言並不重要。不要被圍繞某一種語言的宗教把你扯進去，這只會讓你忘掉了語言的真正目的，也就是作為你的工具來實現有趣的事情。</p>

<p>寫程式作為一項智力活動，是唯一一種能讓你創建交互式藝術的藝術形式。你可以建立專案讓別人使用，而且你可以間接地和使用者溝通。沒有其他的藝術形式能做到如此程度的交互性。電影領著觀眾走向一個方向，繪畫是不會動的。而程式碼卻是雙向互動的。</p>

<p>寫程式作為一項職業只是一般般有趣而已。寫程式可能是一份好工作，但如果你想賺更多的錢而且過得更快樂，你其實開一間快餐分店就可以了。你最好的選擇是將你的程式技術作為你其他職業的秘密武器。</p>

<p>技術公司裡邊會寫程式的人多到一毛錢一打，根本得不到什麼尊敬。而在生物學、醫藥學、政府部門、社會學、物理學、數​​學等行業領域從事寫程式的人就能得到足夠的尊敬，而且你可以使用這項技能在這些領域做出令人驚異的成就。</p>

<p>當然，所有的這些建議都是沒啥意義的。如果你跟著這本書學習寫軟體而且覺得很喜歡這件事情的話，那你完全可以將其當作一門職業去追求。你應該繼續深入拓展這個近五十年來極少有人探索過的奇異而美妙的智力工作領域。若能從中得到樂趣當然就更好了。</p>

<p>最後我要說的是學習創造軟體的過程會改變你而讓你與眾不同。不是說更好或更壞，只是不同了。你也許會發現因為你會寫軟件而人們對你的態度有些怪異，也許會用「怪人「這樣的詞來形容你。也許你會發現因為你會戳穿他們的邏輯漏洞而他們開始討厭和你爭辯。甚至你可能會發現有人因為你懂得電腦怎麼運作而覺得你是個討厭的怪人。</p>

<p>對於這些我只有一個建議: 讓他們去死吧。這個世界需要更多的怪人，他們知道東西是怎麼工作的而且喜歡找到答案。當他們那樣對你時，只要記住這是你的旅程，不是他們的。「與眾不同」不是誰的錯，告訴你「與眾不同是一種錯」的人只是嫉妒你掌握了他們做夢都不能想到的技能而已。</p>

<p>你會寫程式。他們不會。這真他媽的酷。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[下一步]]></title>
    <link href="http://lrthw.github.com/next/"/>
    <updated>2011-07-20T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/next</id>
    <content type="html"><![CDATA[<p>現在還不能說你是一個程式員。這本書的目的相當於給你一個「程式設計師棕帶」。你已經了解了足夠的寫程式基礎，並且有能力閱讀別的寫程式書籍了。讀完這本書，你應該已經掌握了一些學習的方法，並且具備了該有的學習態度，這樣你在閱讀其他 Ruby 書籍時也許會更順利，而且能學到更多東西。</p>

<blockquote><p><strong>Rob says:</strong> 為了更有趣，我推薦你閱讀 Why&#8217;s (Poignant) Guide to Ruby:
<a href="http://mislav.uniqpath.com/poignant-guide">http://mislav.uniqpath.com/poignant-guide</a>
大部份的程式內容現在都正在被 review。但是 Why 的心智無比聰明，而且他的書就像是一件藝術品。去看看它的一些 opensource 專案，你可以從他的程式碼裡學到許多東西。</p></blockquote>

<p>或許，你現在已經可以開始鼓搗一些程式出來了。如果你手上有需要解決的問題，試著寫個程式解決一下。你一開始寫的東西可能很挫，不過這沒有關係。以我為例，我在學每一種語言的初期都是很挫的。沒有哪個初學者能寫出完美的代碼來，如果有人告訴你他有這本事，那他只是在厚著臉皮撒謊而已。</p>

<p>最後，記住學習寫程式是要投入時間的，你可能需要至少每天晚上練習幾個小時。順便告訴你，當你每晚學習 Ruby 的時候，我在努力學習彈吉他。我每天練習2 到4 小時，而且還在學習基本的音階。</p>

<p>每個人都是某一方面的菜鳥。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 52: 創造你的網頁遊戲]]></title>
    <link href="http://lrthw.github.com/ex52/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex52</id>
    <content type="html"><![CDATA[<p>這本書馬上就要結束了。本章的練習對你是一個真正的挑戰。當你完成以後，你就可以算是一個能力不錯的 Ruby 初學者了。為了進一步學習，你還需要多讀一些書，多寫一些程式，不過你已經具備進一步學習的技能了。接下來的學習就只是時間、動力、以及資源的問題了。</p>

<p>在本章習題中，我們不會去創建一個完整的遊戲，取而代之的是我們會為《習題42》中的遊戲建立一個“引擎(engine)”，讓這個遊戲能夠在瀏覽器中運行起來。這會涉及到將《習題42》中的遊戲「重構(refactor)」，將《習題47》中的架構混合進來，添加自動測試程式碼，最後建立一個可以運行遊戲的web 引擎。</p>

<p>這是一節很「龐大」的習題。我預測你要花一周到一個月才能完成它。最好的方法是一點一點來，每晚上完成一點，在進行下一步之前確認上一步有正確完成。</p>

<h2>重構《習題42》的遊戲</h2>

<p>你已經在兩個練習中修改了 <code>gothonweb</code> 專案，這節習題中你會再修改一次。這種修改的技術叫做「重構(refactoring)」，或者用我喜歡的講法來說，叫「修修補補(fixing stuff)」。重構是一個程式術語，它指的是清理舊程式碼或者為舊程式碼添加新功能的過程。你其實已經做過這樣的事情了，只不過不知道這個術語而已。這是寫軟體過程的第二個自然屬性。</p>

<p>你在本節中要做的，是將《習題47》中的可以測試的房間地圖，以及《習題42》中的遊戲這兩樣東西歸併到一起，創建一個新的遊戲架構。遊戲的內容不會發生變化，只不過我們會通過“重構”讓它有一個更好的架構而已。</p>

<p>第一步是將 <code>ex47.rb</code> 的內容複製到 <code>gothonweb/lib/map.rb</code> 中，然後將 <code>ex47_tests.rb</code> 的內容複製到 <code>gothonweb/test/test_map.rb</code>中，然後再次運行測試，確認他們還能正常運作。</p>

<blockquote><p><strong>Note:</strong> 從現在開始我不會再向你展示運行測試的輸出了，我就假設你回去運行這些測試，而且知道怎樣的輸出是正確的。</p></blockquote>

<p>將《習題47》的程式碼拷貝完畢後，你就該開始重構它，讓它包含《習題42》中的地圖。我一開始會把基本架構為你準備好，然後你需要去完成<code>map.rb</code>和<code>map_tests.rb</code> 裡邊的內容。</p>

<p>首先要做的是使用 <code>Room</code> 類來構建基本的地圖架構：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Room</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:paths</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">description</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="vi">@description</span> <span class="o">=</span> <span class="n">description</span>
</span><span class='line'>    <span class="vi">@paths</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">go</span><span class="p">(</span><span class="n">direction</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@paths</span><span class="o">[</span><span class="n">direction</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">add_paths</span><span class="p">(</span><span class="n">paths</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@paths</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">paths</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">central_corridor</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Central Corridor&quot;</span><span class="p">,</span>
</span><span class='line'><span class="sx">%q{</span>
</span><span class='line'><span class="sx">The Gothons of Planet Percal #25 have invaded your ship and destroyed</span>
</span><span class='line'><span class="sx">your entire crew.  You are the last surviving member and your last</span>
</span><span class='line'><span class="sx">mission is to get the neutron destruct bomb from the Weapons Armory,</span>
</span><span class='line'><span class="sx">put it in the bridge, and blow the ship up after getting into an </span>
</span><span class='line'><span class="sx">escape pod.</span>
</span><span class='line'>
</span><span class='line'><span class="sx">You&#39;re running down the central corridor to the Weapons Armory when</span>
</span><span class='line'><span class="sx">a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume</span>
</span><span class='line'><span class="sx">flowing around his hate filled body.  He&#39;s blocking the door to the</span>
</span><span class='line'><span class="sx">Armory and about to pull a weapon to blast you.</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">laser_weapon_armory</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Laser Weapon Armory&quot;</span><span class="p">,</span>
</span><span class='line'><span class="sx">%q{</span>
</span><span class='line'><span class="sx">Lucky for you they made you learn Gothon insults in the academy.</span>
</span><span class='line'><span class="sx">You tell the one Gothon joke you know:</span>
</span><span class='line'><span class="sx">Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr.</span>
</span><span class='line'><span class="sx">The Gothon stops, tries not to laugh, then busts out laughing and can&#39;t move.</span>
</span><span class='line'><span class="sx">While he&#39;s laughing you run up and shoot him square in the head</span>
</span><span class='line'><span class="sx">putting him down, then jump through the Weapon Armory door.</span>
</span><span class='line'>
</span><span class='line'><span class="sx">You do a dive roll into the Weapon Armory, crouch and scan the room</span>
</span><span class='line'><span class="sx">for more Gothons that might be hiding.  It&#39;s dead quiet, too quiet.</span>
</span><span class='line'><span class="sx">You stand up and run to the far side of the room and find the</span>
</span><span class='line'><span class="sx">neutron bomb in its container.  There&#39;s a keypad lock on the box</span>
</span><span class='line'><span class="sx">and you need the code to get the bomb out.  If you get the code</span>
</span><span class='line'><span class="sx">wrong 10 times then the lock closes forever and you can&#39;t</span>
</span><span class='line'><span class="sx">get the bomb.  The code is 3 digits.</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">the_bridge</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;The Bridge&quot;</span><span class="p">,</span>
</span><span class='line'><span class="sx">%q{</span>
</span><span class='line'><span class="sx">The container clicks open and the seal breaks, letting gas out.</span>
</span><span class='line'><span class="sx">You grab the neutron bomb and run as fast as you can to the</span>
</span><span class='line'><span class="sx">bridge where you must place it in the right spot.</span>
</span><span class='line'>
</span><span class='line'><span class="sx">You burst onto the Bridge with the netron destruct bomb</span>
</span><span class='line'><span class="sx">under your arm and surprise 5 Gothons who are trying to</span>
</span><span class='line'><span class="sx">take control of the ship.  Each of them has an even uglier</span>
</span><span class='line'><span class="sx">clown costume than the last.  They haven&#39;t pulled their</span>
</span><span class='line'><span class="sx">weapons out yet, as they see the active bomb under your</span>
</span><span class='line'><span class="sx">arm and don&#39;t want to set it off.</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">escape_pod</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Escape Pod&quot;</span><span class="p">,</span>
</span><span class='line'><span class="sx">%q{</span>
</span><span class='line'><span class="sx">You point your blaster at the bomb under your arm</span>
</span><span class='line'><span class="sx">and the Gothons put their hands up and start to sweat.</span>
</span><span class='line'><span class="sx">You inch backward to the door, open it, and then carefully</span>
</span><span class='line'><span class="sx">place the bomb on the floor, pointing your blaster at it.</span>
</span><span class='line'><span class="sx">You then jump back through the door, punch the close button</span>
</span><span class='line'><span class="sx">and blast the lock so the Gothons can&#39;t get out.</span>
</span><span class='line'><span class="sx">Now that the bomb is placed you run to the escape pod to</span>
</span><span class='line'><span class="sx">get off this tin can.</span>
</span><span class='line'>
</span><span class='line'><span class="sx">You rush through the ship desperately trying to make it to</span>
</span><span class='line'><span class="sx">the escape pod before the whole ship explodes.  It seems like</span>
</span><span class='line'><span class="sx">hardly any Gothons are on the ship, so your run is clear of</span>
</span><span class='line'><span class="sx">interference.  You get to the chamber with the escape pods, and</span>
</span><span class='line'><span class="sx">now need to pick one to take.  Some of them could be damaged</span>
</span><span class='line'><span class="sx">but you don&#39;t have time to look.  There&#39;s 5 pods, which one</span>
</span><span class='line'><span class="sx">do you take?</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">the_end_winner</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;The End&quot;</span><span class="p">,</span>
</span><span class='line'><span class="sx">%q{</span>
</span><span class='line'><span class="sx">You jump into pod 2 and hit the eject button.</span>
</span><span class='line'><span class="sx">The pod easily slides out into space heading to</span>
</span><span class='line'><span class="sx">the planet below.  As it flies to the planet, you look</span>
</span><span class='line'><span class="sx">back and see your ship implode then explode like a</span>
</span><span class='line'><span class="sx">bright star, taking out the Gothon ship at the same</span>
</span><span class='line'><span class="sx">time.  You won!</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">the_end_loser</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;The End&quot;</span><span class="p">,</span>
</span><span class='line'><span class="sx">%q{</span>
</span><span class='line'><span class="sx">You jump into a random pod and hit the eject button.</span>
</span><span class='line'><span class="sx">The pod escapes out into the void of space, then</span>
</span><span class='line'><span class="sx">implodes as the hull ruptures, crushing your body</span>
</span><span class='line'><span class="sx">into jam jelly.</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">escape_pod</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;2&#39;</span> <span class="o">=&gt;</span> <span class="n">the_end_winner</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;*&#39;</span> <span class="o">=&gt;</span> <span class="n">the_end_loser</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">generic_death</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;death&quot;</span><span class="p">,</span> <span class="s2">&quot;You died.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">the_bridge</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;throw the bomb&#39;</span> <span class="o">=&gt;</span> <span class="n">generic_death</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;slowly place the bomb&#39;</span> <span class="o">=&gt;</span> <span class="n">escape_pod</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">laser_weapon_armory</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;0132&#39;</span> <span class="o">=&gt;</span> <span class="n">the_bridge</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;*&#39;</span> <span class="o">=&gt;</span> <span class="n">generic_death</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">central_corridor</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;shoot!&#39;</span> <span class="o">=&gt;</span> <span class="n">generic_death</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;dodge!&#39;</span><span class="o">=&gt;</span> <span class="n">generic_death</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;tell a joke&#39;</span> <span class="o">=&gt;</span> <span class="n">laser_weapon_armory</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="no">START</span> <span class="o">=</span> <span class="n">central_corridor</span>
</span></code></pre></td></tr></table></div></figure>


<p>你會發現我們的 <code>Room</code> 類和地圖有一些問題：</p>

<ol>
<li><p>在進入一個房間以前會打出一段文字作為房間的描述，我們需要將這些描述和每個房間關聯起來，這樣房間的次序就不會被打亂了，這對我們的遊戲是一件好事。這些描述本來是在 <code>if-else</code> 結構中的，這是我們後面要修改的東西。</p></li>
<li><p>原版遊戲中我們使用了專門的程式來生成一些內容，例如炸彈的激活鍵碼，艦艙的選擇等，這次我們做遊戲時就先使用預設值好了，不過後面的加分習題裡，我會要求你把這些功能再加到遊戲中。</p></li>
<li><p>我為所有的遊戲中的失敗結尾寫了一個 <code>generic_death</code>，你需要去補全這個函式。你需要把原版遊戲中所有的失敗結尾都加進去，並確保程式碼能正確運行。</p></li>
<li><p>我添加了一種新的轉換模式，以<code>"*"</code>為標記，用來在遊戲引擎中實現「catch-all」動作。</p></li>
</ol>


<p>等你把上面的程式碼基本寫好以後，接下來就是引導你繼續寫下去的自動測試的內容 <code>test/test_map.rb</code> 了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;test/unit&#39;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;../lib/map&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MapTests</span> <span class="o">&lt;</span> <span class="no">Test</span><span class="o">::</span><span class="no">Unit</span><span class="o">::</span><span class="no">TestCase</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_room</span><span class="p">()</span>
</span><span class='line'>    <span class="n">gold</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;GoldRoom&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="sx">%q{This room has gold in it you can grab. There&#39;s a</span>
</span><span class='line'><span class="sx">                door to the north.}</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">gold</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s2">&quot;GoldRoom&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">gold</span><span class="o">.</span><span class="n">paths</span><span class="p">,</span> <span class="p">{})</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_room_paths</span><span class="p">()</span>
</span><span class='line'>    <span class="n">center</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Center&quot;</span><span class="p">,</span> <span class="s2">&quot;Test room in the center.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">north</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;North&quot;</span><span class="p">,</span> <span class="s2">&quot;Test room in the north.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">south</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;South&quot;</span><span class="p">,</span> <span class="s2">&quot;Test room in the south.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="s1">&#39;north&#39;</span> <span class="o">=&gt;</span> <span class="n">north</span><span class="p">,</span> <span class="s1">&#39;south&#39;</span> <span class="o">=&gt;</span> <span class="n">south</span><span class="p">})</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">center</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;north&#39;</span><span class="p">),</span> <span class="n">north</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">center</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;south&#39;</span><span class="p">),</span> <span class="n">south</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_map</span><span class="p">()</span>
</span><span class='line'>    <span class="n">start</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Start&quot;</span><span class="p">,</span> <span class="s2">&quot;You can go west and down a hole.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">west</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Trees&quot;</span><span class="p">,</span> <span class="s2">&quot;There are trees here, you can go east.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">down</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Dungeon&quot;</span><span class="p">,</span> <span class="s2">&quot;It&#39;s dark down here, you can go up.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">start</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="s1">&#39;west&#39;</span> <span class="o">=&gt;</span> <span class="n">west</span><span class="p">,</span> <span class="s1">&#39;down&#39;</span> <span class="o">=&gt;</span> <span class="n">down</span><span class="p">})</span>
</span><span class='line'>    <span class="n">west</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="s1">&#39;east&#39;</span> <span class="o">=&gt;</span> <span class="n">start</span><span class="p">})</span>
</span><span class='line'>    <span class="n">down</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="s1">&#39;up&#39;</span> <span class="o">=&gt;</span> <span class="n">start</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">start</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;west&#39;</span><span class="p">),</span> <span class="n">west</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">start</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;west&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;east&#39;</span><span class="p">),</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">start</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;down&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;up&#39;</span><span class="p">),</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_gothon_game_map</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="no">START</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;shoot!&#39;</span><span class="p">),</span> <span class="n">generic_death</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="no">START</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;dodge!&#39;</span><span class="p">),</span> <span class="n">generic_death</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">room</span> <span class="o">=</span> <span class="no">START</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="s1">&#39;tell a joke&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">room</span><span class="p">,</span> <span class="n">laser_weapon_armory</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>你在這部分練習中的任務是完成地圖，並且讓自動測試可以完整地檢查過整個地圖。這包括將所有的 <code>generic_death</code> 物件修正為遊戲中實際的失敗結尾。讓你的程式碼成功運行起來，並讓你的測試越全面越好。後面我們會對地圖做一些修改，到時候這些測試將保證修改後的程式碼還可以正常工作。</p>

<h2>會話(session)和用戶跟踪</h2>

<p>在你的 web 程式運行的某個位置，你需要追踪一些信息，並將這些信息和用戶的瀏覽器關聯起來。在HTTP 協議的框架中，web 環境是「無狀態(stateless)」的，這意味著你的每一次請求和你其它的請求都是相互獨立的。如果你請求了頁面A，輸入了一些資料，然後點了一個頁面B 的鏈接，那你在頁面A 輸入的數據就全部消失了。</p>

<p>解決這個問題的方法是為 web 程式建立一個很小的資料儲存功能，給每個瀏覽器賦予一個獨一無二的數字，用來跟踪瀏覽器所作的事情。這個功能通常適用資料庫或者是存儲在磁碟上的檔案來實現。在 Sinatra 這個框架中實現這樣的功能是很容易的，以下就是一個這樣的例子（使用 Rack middleware)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Session</span><span class="o">::</span><span class="no">Pool</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/count&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">session</span><span class="o">[</span><span class="ss">:count</span><span class="o">]</span> <span class="o">||=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">session</span><span class="o">[</span><span class="ss">:count</span><span class="o">]</span> <span class="o">+=</span><span class="mi">1</span>
</span><span class='line'>  <span class="s2">&quot;Count: </span><span class="si">#{</span><span class="n">session</span><span class="o">[</span><span class="ss">:count</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/reset&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">session</span><span class="o">.</span><span class="n">clear</span>
</span><span class='line'>  <span class="s2">&quot;Count reset to 0.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>建立引擎</h2>

<p>你應該已經寫好了遊戲地圖和它的單元測試程式碼碼。現在我要求你製作一個簡單的遊戲引擎，用來讓遊戲中的各個房間運轉起來，從玩家收集輸入，並且記住玩家到了那一幕。我們將用到你剛學過的會話來製作一個簡單的引擎，讓它可以：</p>

<ol>
<li>為新使用者啟動新的遊戲。</li>
<li>將房間展示給使用者。</li>
<li>接受使用者的輸入。</li>
<li>在遊戲中處理使用者的輸入。</li>
<li>顯示遊戲的結果，繼續遊戲的下一幕，知道玩家角色死亡為止。</li>
</ol>


<p>為了建立這個引擎，你需要將我們久經考驗的<code>lib/gothonsweb.rb</code> 搬過來，建立一個功能完備的、基於 session 的遊戲引擎。這裡的難點是我會先使用基本的 HTML 檔案創建一個非常簡單的版本，接下來將由你完成它，基本的引擎是這個樣子的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;gothonweb/version&quot;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;map&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sinatra&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Gothonweb</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">use</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Session</span><span class="o">::</span><span class="no">Pool</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># this is used to &quot;setup&quot; the session with starting values</span>
</span><span class='line'>    <span class="nb">p</span> <span class="no">START</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span><span class="ss">:room</span><span class="o">]</span> <span class="o">=</span> <span class="no">START</span>
</span><span class='line'>    <span class="n">redirect</span><span class="p">(</span><span class="s2">&quot;/game&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/game&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">session</span><span class="o">[</span><span class="ss">:room</span><span class="o">]</span>
</span><span class='line'>      <span class="n">erb</span> <span class="ss">:show_room</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:room</span> <span class="o">=&gt;</span> <span class="n">session</span><span class="o">[</span><span class="ss">:room</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># why is there here? do you need it?</span>
</span><span class='line'>      <span class="n">erb</span> <span class="ss">:you_died</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">post</span> <span class="s1">&#39;/game&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">action</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:action</span><span class="o">]</span> <span class="o">||</span> <span class="kp">nil</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="c1"># there is a bug here, can you fix it?</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">session</span><span class="o">[</span><span class="ss">:room</span><span class="o">]</span>
</span><span class='line'>      <span class="n">session</span><span class="o">[</span><span class="ss">:room</span><span class="o">]</span> <span class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:room</span><span class="o">].</span><span class="n">go</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:action</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">redirect</span><span class="p">(</span><span class="s2">&quot;/game&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>下一步，你應該刪除 <code>lib/views/hello_form.erb</code> 和 <code>lib/views/index.erb</code> 然後創作兩個在上述 code 提到的 template，這裡是一個非常簡單的 <code>lib/views/show_room.erb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="n">room</span><span class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span class="x">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;</span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="n">room</span><span class="o">.</span><span class="n">description</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">room</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s2">&quot;death&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;p&gt;</span>
</span><span class='line'><span class="x">  &lt;a href=&quot;/&quot;&gt;Play Again?&lt;/a&gt;</span>
</span><span class='line'><span class="x">  &lt;/p&gt;</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;p&gt;</span>
</span><span class='line'><span class="x">  &lt;form action=&quot;/game&quot; method=&quot;POST&quot;&gt;</span>
</span><span class='line'><span class="x">    - &lt;input type=&quot;text&quot; name=&quot;action&quot;&gt; &lt;input type=&quot;SUBMIT&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;/form&gt;</span>
</span><span class='line'><span class="x">  &lt;/p&gt;</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>這就用來顯示遊戲中的房間的模板。接下來，你需要在使用者跑到地圖的邊界時，用一個模板告訴使用者他的角色的死亡信息，也就是<code>lib/views/you_died.erb</code> 這個模板：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;You Died!&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;Looks like you bit the dust.&lt;/p&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Play Again&lt;/a&gt;&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>準備好了這些文件，你現在可以做下面的事情了：</p>

<ol>
<li>讓測試代碼 <code>test/test_gothonsweb.rb</code> 再次運行起來，這樣你就可以去測試這個遊戲。由於 session 的存在，你可能頂多只能實現幾次點擊，不過你應該可以做出一些基本的測試來。</li>
<li>執行 lib/gothonsweb.rb` 腳本，試玩一下你的遊戲。</li>
<li>你需要和往常一樣刷新和修正你的遊戲，慢慢修改遊戲的HTML 檔案和引擎，直到你實現遊戲需要的所有功能為止。</li>
</ol>


<h2>你的期末考試</h2>

<p>你有沒有覺著我一下子給了你超多的資訊呢？那就對了，我想要你在學習技能的同時可以有一些可以用來鼓搗的東西。為了完成這節習題，我將給你最後一套需要你自己完成的練習。你將注意到，到目前為止你寫的遊戲並不是很好，這只是你的第一版程式碼而已。你現在的任務是讓遊戲更加完善，實現下面的這些功能：</p>

<ol>
<li>修正程式碼中所有我提到和沒提到的bug，如果你發現了新的bug，你可以告訴我。</li>
<li>改進所有的自動測試，讓你可以測試更多的內容，直到你可以不用瀏覽器就能測到所有的內容為止。</li>
<li>讓HTML 頁面看上去更美觀一些。</li>
<li>研究一下網頁登錄系統，為這個程式創建一個登錄界面，這樣人們就可以登錄這個遊戲，並且可以保存遊戲高分。</li>
<li>完成遊戲地圖，盡可能地把遊戲做大，功能做全。</li>
<li>給用戶一個「幫助系統」，讓他們可以查詢每個房間裡可以執行哪些命令。</li>
<li>為你的遊戲添加新功能，想到什麼功能就添加什麼功能。</li>
<li>創建多個地圖，讓用戶可以選擇他們想要玩的一張來進行遊戲。你的 <code>lib/gothonsweb.rb</code> 應該可以運行提供給它的任意的地圖，這樣你的引擎就可以支持多個不同的遊戲。</li>
<li>最後，使用你在習題 48 和49 中學到的東西來創建一個更好的輸入處理器。你手頭已經有了大部分必要的程式碼，你只需要改進語法，讓它和你的輸入表單以及遊戲引擎掛鉤即可。</li>
</ol>


<p>祝你好運！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 51: 從瀏覽器中取得輸入]]></title>
    <link href="http://lrthw.github.com/ex51/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex51</id>
    <content type="html"><![CDATA[<p>雖然能讓瀏覽器顯示「Hello World」是很有趣的一件事情，但是如果能讓用戶通過表單(form)向你的應用程序提交資訊就更有趣了。這節習題中，我們將使用form 改進你的web 程式，並且搞懂如何為一個網站程式寫自動化測試。</p>

<h2>Web 運作原理</h2>

<p>該學點無趣的東西了。在建立 form 前你需要先多學一點關於 web的運作原理。這裡講的並不完整，但是相當準確，在你的程式出錯時，它會幫你找到出錯的原因。另外，如果你理解了form 的應用，那麼建立form 對你來說就會更容易了。</p>

<p>我將以一個簡單的圖示講起，它向你展示了web 請求的各個不同的部分，以及資訊傳遞的大致流程：</p>

<p><img src="http://learnpythonthehardway.org/book/_images/http_request_diagram.png" alt="http request diagram" /></p>

<p>為了方便講述HTTP 請求(request) 的流程，我在每條線上面加了字母標籤以作區別。</p>

<ol>
<li>你在瀏覽器中輸入網址http://learnpythonthehardway.org/，然後瀏覽器會通過你的電腦的網路設備發出request（<code>線路A</code>）。</li>
<li>你的request 被傳送到網際網路（<code>線路B</code>），然後再抵達遠端服務器（<code>線路C</code>），然後我的伺服器將接受這個request。</li>
<li>我的伺服器接受 request 後，我的 web 應用程式就去處理這個請求（<code>線路D</code>），然後我的軮頁應用程式就會去運行 <code>/</code> (index) 這個「處理程序(handler)」。</li>
<li>在程式碼 return 的時候，我的伺服器就會發出響應(response)，這個響應會再通過<code>線路D</code>傳遞到你的瀏覽器。</li>
<li>這個網站所在的伺服器將響應由<code>線路D</code>獲取，然後通過<code>線路C</code>傳至網際網路。</li>
<li>響應通過網路網路由<code>線路B</code>傳至你的電腦，電腦的網路卡再通過<code>線路A</code>將響應傳給你的瀏覽器。</li>
<li>最後，你的瀏覽器顯示了這個響應的內容。</li>
</ol>


<p>這段詳解中用到了一些術語。你需要掌握這些術語，以便在談論你的 web 應用時你能明白而且應用它們：</p>

<h3>瀏覽器(browser)</h3>

<p>這是你幾乎每天都會用到的軟件。大部分人不知道它真正的原理，他們只會把它叫作「網際網路」。它的作用其實是接收你輸入到地址欄網址(例如<a href="http://learnpythonthehardway.org">http://learnpythonthehardway.org</a>)，然後使用該資訊向該網址對應的伺服器提出請求(request)。</p>

<h3>IP 位址 ( Address )</h3>

<p>通常這是一個像 <a href="http://learnpythonthehardway.org/">http://learnpythonthehardway.org/</a> 一樣的URL (Uniform Resource Locator，統一資源定位符 )，它告訴瀏覽器該打開哪個網站。前面的 <code>http</code> 指出了你要使用的協議(protocol)，這裡我們用的是「超文本傳輸協議(Hyper-Text Transport Protocol)」。你還可以試試ftp://ibiblio.org/，這是一個「FTP文件傳輸協議(File Transport Protocol)‘的例子。<code>learnpythonthehardway.org</code> 這部分是「主機名(hostname)」，也就是一個便於人閱讀和記憶的字串，主機名會被匹配到一串叫作「IP 位址」的數字上面，這個「IP 位址」就相當於網路中一台電腦的電話號碼，通過這個號碼可以訪問到這台電腦。最後，URL中還可以尾隨一個「路徑「，例如http://learnpythonthehardway.org/book/ 中的 <code>/book/</code>，它對應的是伺服器上的某個文件或者某些資源，通過訪問這樣的網址，你可以向伺服器發出請求，然後獲得這些資源。網站地址還有很多別的組成部分，不過這些是最主要的。</p>

<h3>連接(connection)</h3>

<p>一旦瀏覽器知道了協議(http)、伺服器(learnpythonthehardway.org)、以及要獲得的資源，它就要去建立一個連接。這個過程中，瀏覽器讓操作系統(Operating System, OS) 打開計算機的一個「埠號(port)」（通常是80埠號），埠號準備好以後，操作系統會回傳給你的程式一個類似檔案的東西，它所做的事情就是通過網路傳輸和接收資料，讓你的電腦和learnpythonthehardway.org這個網站所屬的伺服器之間實現資料交流。當你使用 http://localhost:4567/ 訪問你自己的站點時，發生的事情其實是一樣的，只不過這次你告訴了瀏覽器要訪問的是你自己的電腦(localhost)，要使用的端口不是默認的80，而是 4567 。你還可以直接訪問http://learnpythonthehardway.org:80/，這和不輸入埠號效果一樣，因為HTTP的默認埠號本來就是80。</p>

<h3>請求(request)</h3>

<p>你的瀏覽器通過你提供的地址建立了連接，現在它需要從遠端伺服器要到它（或你）想要的資源。如果你在URL的結尾加了 <code>/book/</code>，那你想要的就是<code>/book/</code> 對應的檔案或資源，大部分的伺服器會直接為你呼叫<code>/book/index.html</code> 這個檔案，不過我們就假裝不存在好了。瀏覽器為了獲得伺服器上的資源，它需要向伺服器發送一個「請求」。這裡我就不講細節了，為了得到伺服器上的內容，你必須先向伺服器發送一個請求才行。有意思的是，「資源」不一定非要是檔案。例如當瀏覽器向你的應用程序提出請求的時候，伺服器返回的其實是你的程式碼生成的一些東西。</p>

<h3>伺服器(server)</h3>

<p>伺服器指的是瀏覽器另一端連接的電腦，它知道如何回應瀏覽器請求的檔案和資源。大部分的 web 伺服器只要發送檔案就可以了，這也是伺服器流量的主要部分。不過你學的是使用 Ruby 組建一個伺服器，這個伺服器知道如何接受請求，然後返回用 Ruby 處理過的字符串。當你使用這種處理方式時，你其實是假裝把檔案發給了瀏覽器，其實你用的都只是程式碼而已。就像你在《習題50》中看到的，要構建一個「響應」其實也不需要多少程式碼。</p>

<h3>響應(response)</h3>

<p>這就是你的伺服器回覆給你的請求，傳回至瀏覽器的HTML，它裡邊可能有css、javascript、或者圖像等內容。以檔案響應為例，伺服器只要從磁碟讀取檔案，發送給瀏覽器就可以了，不過它還要將這些內容包在一個特別定義的「header]」中，這樣瀏覽器就會知道它獲取的是什麼類型的內容。以你的web 應用程式為例，你發送的其實還是一樣的東西，包括 header 也一樣，只不過這些資料是你用 Ruby 程式碼即時生成的。</p>

<p>這個可以算是你能在網上找到的關於瀏覽器如何訪問網站的最快的快速課程了。這節課程應該可以幫你更容易地理解本節的習題，如果你還是不明白，就到處找資料多多了解這方面的資訊，知道你明白為止。有一個很好的方法，就是你對照著上面的圖示，將你在《習題50》中創建的 web 程式中的內容分成幾個部分，讓其中的各部分對應到上面的圖示。如果你可以正確地將程式的各部分對應到這個圖示，你就大致開始明白它的運作原理了。</p>

<h2>表單(form)的運作原理</h2>

<p>熟悉「表單」最好的方法就是寫一個可以接收表單資料的程式出來，然後看你可以對它做些什麼。先將你的<code>lib/gothonsweb.rb</code> 修改成下面的樣子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;gothonweb/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sinatra&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Gothonweb</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span><span class='line'>    <span class="n">erb</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:greeting</span> <span class="o">=&gt;</span> <span class="n">greeting</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/hello&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">name</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot;Nobody&quot;</span>
</span><span class='line'>    <span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;Hello, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">erb</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:greeting</span> <span class="o">=&gt;</span> <span class="n">greeting</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>重啟你的 Sinatra（按CTRL-C後重新運行），確認它有運行起來，然後使用瀏覽器訪問 http://localhost:4567/hello，這時瀏覽器應該會顯示 &#8220;I just wanted to say Hello , Nobody.&#8221;，接下來，將瀏覽器的地址改成 http://localhost:4567/hello?name=Frank，然後你可以看到頁面顯示為 &#8220;Hello, Frank.&#8221;，最後將 <code>name=Frank</code> 修改為你自己的名字，你就可以看到它對你說 Hello 了。</p>

<p>讓我們研究一下你的程式裡做過的修改。</p>

<ol>
<li>我們沒有直接為 greeting 賦值，而是使用了 <code>params</code> Hash 從瀏覽器獲取數據。這Sinatra 個函數會將一組在 URL <code>?</code> 後面的部份的 key / value 組加進 <code>prarms</code> Hash 裡。</li>
<li>然後我從 <code>params[:name]</code> 中找到 <code>name</code> 的值，並為 <code>greeting</code> 賦值，這部份相信你已經很熟悉了。</li>
<li>其他的內容和以前是一樣的，我們就不再分析了。</li>
</ol>


<p>URL中該還可以包含多個參數。將本例的URL改成這樣子： <code>http://localhost:4567/hello?name=Frank&amp;greet=Hola</code>。然後修改程式碼，讓它去存取 <code>prarams[:name]</code> 和 <code>params[:greet]</code>，如下所示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">greet</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>創建HTML表單</h2>

<p>你可以通過URL參數實現表單提交，不過這樣看上去有些醜陋，而且不方便一般人使用，你真正需要的是一個「POST表單」，這是一種包含了<code>&lt;form&gt;</code>標籤的特殊 HTML 檔案。這種表單收集使用者輸入並將其傳遞給你的web程式，這和你上面實現的目的基本是一樣的。</p>

<p>讓我們來快速建立一個，從中你可以看出它的運作原理。你需要創建一個新的HTML文件，叫做 <code>lib/views/hello_form.erb</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">    &lt;head&gt;</span>
</span><span class='line'><span class="x">        &lt;title&gt;Sample Web Form&lt;/title&gt;</span>
</span><span class='line'><span class="x">    &lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;h1&gt;Fill Out This Form&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;form action=&quot;/hello&quot; method=&quot;POST&quot;&gt;</span>
</span><span class='line'><span class="x">    A Greeting: &lt;input type=&quot;text&quot; name=&quot;greet&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;br/&gt;</span>
</span><span class='line'><span class="x">    Your Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;br/&gt;</span>
</span><span class='line'><span class="x">    &lt;input type=&quot;submit&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後將 <code>lib/gothonsweb.rb</code>改成這樣：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;gothonweb/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sinatra&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Gothonweb</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span><span class='line'>    <span class="n">erb</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:greeting</span> <span class="o">=&gt;</span> <span class="n">greeting</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/hello&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">erb</span> <span class="ss">:hello_form</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">post</span> <span class="s1">&#39;/hello&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:greet</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot;Hello&quot;</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot;Nobody&quot;</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">erb</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:greeting</span> <span class="o">=&gt;</span> <span class="n">greeting</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>都寫好以後，重啟 web 程式，然後通過你的瀏覽器訪問它。</p>

<p>這回你會看到一個表單，它要求你輸入「一個問候語句(A Greeting)」和「你的名字(Your Name)」，等你輸入完後點擊「提交(Submit)」按鈕，它就會輸出一個正常的問候頁面，不過這一次你的URL還是 http://localhost:4567/hello，並沒有添加參數進去。</p>

<p>在<code>hello_form.erb</code> 裡面關鍵的一行是<code>&lt;form action="/hello" method="POST"&gt;</code>，它告訴你的瀏覽器以下內容：</p>

<ol>
<li>從表單中的各個欄位收集使用者輸入的資料。</li>
<li>讓瀏覽器使用一種POST類型的請求，將這些資料發送給服務器。這是另外一種瀏覽器請求，它會將表單欄位「隱藏」起來。</li>
<li>將這個請求發送至<code>/hello</code> URL，這是由<code>action="/hello"</code>告訴瀏覽器的。</li>
<li>你可以看到兩段<code>&lt;input&gt;</code>標籤的名字屬性(name)和程式碼中的變數是對應的，另外我們在 class index 中使用的不再只是 GET 方法，而是另一個 POST 方法。</li>
</ol>


<p>這個新程式的運作原理如下：</p>

<ol>
<li>瀏覽器訪問到 web 程式的 <code>/hello</code> 目錄，它發送了一個 GET 請求，於是我們的 <code>get '/hello/</code> 就運行了並傳回了hello_form。</li>
<li>你填好了瀏覽器的表單，然後瀏覽器依照<code>&lt;form&gt;</code>中的要求，將資料通過POST 請求的方式發給web程式。</li>
<li>Web 程式運行了 <code>post '/hello'</code> 而不是不是 <code>get '/hello/</code>來處理這個請求。</li>
<li>這個 <code>post '/hello'</code>完成了它正常的功能，將 <code>hello</code> 頁面返回，這裡並沒有新的東西，只是一個新函式名稱而已。</li>
</ol>


<p>作為練習，在 <code>lib/views/index.erb</code> 中添加一個鏈接，讓它指向 <code>/hello</code>，這樣你可以反覆填寫並提交表單查看結果。確認你可以解釋清楚這個鏈接的工作原理，以及它是如何讓你實現在 <code>lib/views/index.erb</code> 和<code>lib/views/hello_form.erb</code>之間循環跳轉的，還有就是要明白你新修改過的 Ruby 程式碼，你需要知道在什麼情況下會運行到哪一部分程式碼。</p>

<h2>Creating A Layout Template</h2>

<p>在你下一節練習建立遊戲的過程中，你需要建立很多的小 HTML 頁面。如果你每次都寫一個完整的網頁，你會很快感覺到厭煩的。幸運的是你可以建立一個「外觀 (layout」模板，也就是一種提供了通用的 headers 和 footers 的外殼模板，你可以用它將你所有的其他網頁包裹起來。好程式設計師會盡可能減少重複動作，所以要做一個好程式設計師，使用外觀模板是很重要的。</p>

<p>將 <code>lib/views/index.erb</code> 修改成這樣：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">greeting</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;p&gt;I just wanted to say &lt;em style=&quot;color: green; font-size: 2em;&quot;&gt;</span><span class="cp">&lt;%=</span> <span class="n">greeting</span> <span class="cp">%&gt;</span><span class="x">&lt;/em&gt;.</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;em&gt;Hello&lt;/em&gt;, world!</span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>然後把 <code>lib/views/hello_form.erb</code> 修改成這樣：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;Fill Out This Form&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;form action=&quot;/hello&quot; method=&quot;POST&quot;&gt;</span>
</span><span class='line'><span class="x">    A Greeting: &lt;input type=&quot;text&quot; name=&quot;greet&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;br/&gt;</span>
</span><span class='line'><span class="x">    Your Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;br/&gt;</span>
</span><span class='line'><span class="x">    &lt;input type=&quot;submit&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>面這些修改的目的，是將每一個頁面頂部和底部的反覆用到的「樣板 (boilerplate)」程式碼剝掉。這些被剝掉的程式碼會被放到一個單獨的<code>lib/views/layout.erb</code> 檔案中，從此以後，這些反覆用到的程式碼就由<code>lib/views/layout.erb</code> 來提供了。</p>

<p>上面的都改好以後，建立一個 <code>lib/views/layout.erb</code> 檔案，內容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">  &lt;head&gt;</span>
</span><span class='line'><span class="x">    &lt;title&gt;Gothons From Planet Percal #25&lt;/title&gt;</span>
</span><span class='line'><span class="x">  &lt;/head&gt;</span>
</span><span class='line'><span class="x">  &lt;body&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Sinatra 預設會自動去找名字為 <code>layout</code> 的外觀模板，並且使用它作為其他模板的「基礎」模板。你也可以修改已經用作任何頁面的基礎模板的 template。重啟你的程式觀察一下，然後試著用各種方法修改你的layout模板，不要修改你別的模板，看看輸出會有什麼樣的變化。</p>

<h2>為表單撰寫自動測試程式碼</h2>

<p>使用瀏覽器測試 web 程式是很容易的，只要點刷新按鈕就可以了。不過畢竟我們是程式設計師嘛，如果我們可以寫一些程式碼來測試我們的程式，為什麼還要重複手動測試呢？接下來你要做的，就是為你的web 程式寫一個小測試。這會用到你在《習題47》學過的一些東西，如果你不記得的話，可以回去複習一下。</p>

<p>我已經為此建立了一個簡單的小函式，讓你判斷(assert) web程序的響應，這個函數有一個很合適的名字，就叫 <code>assert_response</code>。創建一個 <code>tests/tools.rb</code> 檔案，內容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;test/unit&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">assert_response</span><span class="p">(</span><span class="n">resp</span><span class="p">,</span> <span class="n">contains</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">matches</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">status</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">assert_equal</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">status</span><span class="p">,</span> <span class="n">status</span><span class="p">,</span> <span class="s2">&quot;Expected response </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2"> not in </span><span class="si">#{</span><span class="n">resp</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="mi">200</span>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">body</span><span class="p">,</span> <span class="s2">&quot;Response data is empty.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">contains</span>
</span><span class='line'>    <span class="n">assert</span><span class="p">((</span><span class="n">resp</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">include?</span> <span class="n">contains</span><span class="p">),</span> <span class="s2">&quot;Response does not contain </span><span class="si">#{</span><span class="n">contains</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">matches</span>
</span><span class='line'>    <span class="n">reg</span> <span class="o">=</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">matches</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert</span> <span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">contains</span><span class="p">),</span> <span class="s2">&quot;Response does not match </span><span class="si">#{</span><span class="n">matches</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">headers</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">headers</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最後，執行 <code>test/test_gothonsweb.rb</code> 去測試你的程式：</p>

<pre><code>$ ruby test/test_gothonweb.rb 
Loaded suite test/test_gothonweb
Started
.
Finished in 0.023839 seconds.

1 tests, 9 assertions, 0 failures, 0 errors, 0 skips

Test run options: --seed 57414
</code></pre>

<p><code>rack/test</code> 函式庫包含了一串很簡單的 API 可以讓你處理請求。他們是 <code>get</code>, <code>put</code>, <code>post</code>, <code>delete</code> 和 <code>head</code> 函式，模擬程式會遇到的各類類型請求。</p>

<p>所有假的 (mock) request 函式會有一樣的參數模式：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/path&#39;</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="p">{},</span> <span class="n">rack_env</span><span class="o">=</span><span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>/path</code> 是 request 路徑，而且可以選擇性的包含一個 query string。</li>
<li><code>params</code> 是一組 query/post 的 Hash 參數，一個  request body 字串，或者是 nil</li>
<li><code>rack_env</code> 是一個 Rack 環境值 Hash。這可以用來設置 request 的 header 和其他 request 相關的資訊，例如 session 內的資料。</li>
</ul>


<p>這樣的運作方式就不用實際運作一個真的 web 伺服器，如此一來你就可以使用自動化測試程式碼去測試，當然同時你也可以使用瀏覽器去測試一個執行中的伺服器。</p>

<p>為了驗證(validate) 函式的響應，你需要使用 <code>test/tools.rb</code> 中定義的<code>assert_response</code> 函式，裡面內容是：</p>

<p>To validate responses from this function, use the <code>assert_response</code> function from <code>test/tools.rb</code> which has:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">assert_response</span><span class="p">(</span><span class="n">resp</span><span class="p">,</span> <span class="n">contains</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">matches</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">status</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>把你呼叫 <code>get</code> 或 <code>post</code> 得到的響應傳遞給這個函數，然後將你要檢查的內容作為參數傳遞給這個函數。你可以使用 <code>contains</code>參數來檢查響應中是否包含指定的值，使用 <code>status</code> 參數可以檢查指定的響應狀態。這個小函式其實包含了很多的資訊，所以你還是自己研究一下的比較好。</p>

<p>在 <code>test/test_gothonsweb.rb</code> 自動測試腳本中，我首先確認 <code>/foo</code> URL 傳回了一個「404 Not Found」響應，因為這個 URL其實是不存在的。然後我檢查了<code>/hello</code> 在 GET 和 POST 兩種請求的情況下都能正常運作。就算你沒有弄明白測試的原理，這些測試程式碼應該是很好讀懂的。</p>

<p>花一些時間研究一下這個最新版的web程式，重點研究一下自動測試的運作原理。</p>

<h2>加分習題</h2>

<ol>
<li>閱讀和HTML 相關的更多資料，然後為你的表單設計一個更好的輸出格式。你可以先在紙上設計出來，然後用HTML 去實現它。</li>
<li>這是一道難題，試著研究一下如何進行檔案上傳，通過網頁上傳一張圖像，然後將其保存到磁碟中。</li>
<li>更難的難題，找到 HTTP RFC 文件（講述HTTP 運作原理的技術文件），然後努力閱讀一下。這是一篇很無趣的文件，不過偶爾你會用到裡邊的一些知識。</li>
<li>又是一道難題，找人幫你設置一個 web 伺服器，例如Apache、Nginx、或者thttpd。試著讓伺服器伺服一下你建立的.html 和.css 文件。如果失敗了也沒關係，web 服務器本來就都有點爛。</li>
<li>完成上面的任務後休息一下，然後試著多建立一些 web 程式出來。你應該仔細閱讀 Sinatra 中關於會話(session)的內容，這樣你可以明白如何存留使用者的狀態資訊。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 50: 你的第一個網站]]></title>
    <link href="http://lrthw.github.com/ex50/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex50</id>
    <content type="html"><![CDATA[<p>這節以及後面的習題中，你的任務是把前面建立的遊戲做成網頁版。這是本書的最後三個章節，這些內容對你來說難度會相當大，你要在上面花些時間才能做出來。在你開始這節練習以前，你必須已經成功地完成過了《習題46》的內容，正確安裝了 <strong>RubyGems</strong>，而且學會瞭如何安裝軟體套件以及如何建立專案骨架。如果你不記得這些內容，就回到《習題46》重新複習一遍。</p>

<h2>安裝 Sinatra</h2>

<p>在建立你的第一個網頁應用程式之前，你需要安裝一個「Web框架」，它的名字叫 <strong>Sinatra</strong>。所謂的「框架」通常是指「讓某件事情做起來更容易的軟體套件」。在網頁應用的世界裡，人們建立了各種各樣的「網頁框架」，用來解決他們在建立網站時碰到的問題，然後把這些解決方案用軟體套件的方式發佈出來，這樣你就可以利用它們引導建立你自己的專案了。</p>

<p>可選的框架類型有很多很多，不過在這裡我們將使用 Sinatra 框架。你可以先學會它，等到差不多的時候再去接觸其它的框架，不過 Sinatra 本身挺不錯的，所以就算你一直使用也沒關係。</p>

<p>使用 <code>gem</code> 安裝 Sinatra:</p>

<pre><code>$ gem install sinatra
Fetching: tilt-1.3.2.gem (100%)
Fetching: sinatra-1.2.6.gem (100%)
Successfully installed tilt-1.3.2
Successfully installed sinatra-1.2.6
2 gems installed
Installing ri documentation for tilt-1.3.2...
Installing ri documentation for sinatra-1.2.6...
Installing RDoc documentation for tilt-1.3.2...
Installing RDoc documentation for sinatra-1.2.6...
</code></pre>

<h2>寫一個簡單的「Hello World」專案</h2>

<p>現在你將做一個非常簡單的「Hello World」專案出來，首先你要建立一個專案目錄：</p>

<pre><code>$ cd projects
$ bundle gem gothonweb
</code></pre>

<p>你最終的目的是把《習題42》中的遊戲做成一個 web 應用，所以你的專案名稱叫做 <code>gothonweb</code>，不過在此之前，你需要建立一個最基本的 Sinatra應用，將下面的代碼放到<code>lib/gothonweb.rb</code>中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;gothonweb/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sinatra&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Gothonweb</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">greeting</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後使用下面的方法來運行這個 web 程式：</p>

<pre><code>$ ruby lib/gothonweb.rb
== Sinatra/1.2.6 has taken the stage on 4567 for development with backup from WEBrick
[2011-07-18 11:27:07] INFO  WEBrick 1.3.1
[2011-07-18 11:27:07] INFO  ruby 1.9.2 (2011-02-18) [x86_64-linux]
[2011-07-18 11:27:07] INFO  WEBrick::HTTPServer#start: pid=6599 port=4567
</code></pre>

<p>最後，使用你的網頁瀏覽器，打開 URL <code>http://localhost:4567/</code>，你應該看到兩樣東西，首先是瀏覽器裡顯示了 <code>Hello, world!</code>，然後是你的命令行終端顯示了如下的輸出：</p>

<pre><code>127.0.0.1 - - [18/Jul/2011 11:29:10] "GET / HTTP/1.1" 200 12 0.0015
localhost - - [18/Jul/2011:11:29:10 EDT] "GET / HTTP/1.1" 200 12
- -&gt; /
127.0.0.1 - - [18/Jul/2011 11:29:10] "GET /favicon.ico HTTP/1.1" 404 447 0.0008
localhost - - [18/Jul/2011:11:29:10 EDT] "GET /favicon.ico HTTP/1.1" 404 447
- -&gt; /favicon.ico
</code></pre>

<p>這些是 Sinatra 印出的 log 資訊，從這些資訊你可以看出服務器有在運行，而且能了解到程式在瀏覽器背後做了些什麼事情。這些資訊還有助於你發現程式的問題。例如在最後一行它告訴你瀏覽器試圖存取 <code>/favicon.ico</code>，但是這個文件並不存在，因此它返回的狀態碼是 <code>404 Not Found</code>。</p>

<p>到這裡，我還沒有講到任何 web 相關的工作原理，因為首先你需要完成準備工作，以便後面的學習能順利進行，接下來的兩節習題中會有詳細的解釋。我會要求你用各種方法把你的 Sinatra 應用程式弄壞，然後再將其重新構建起來：這樣做的目的是讓你明白運行 Sinatra 程式需要準備好哪些東西。</p>

<h2>發生了什麼事情？</h2>

<p>在瀏覽器訪問到你的網頁應用程式時，發生了下面一些事情：</p>

<ol>
<li>瀏覽器通過網路連接到你自己的電腦，它的名字叫做 <code>localhost</code>，這是一個標準稱謂，表示的誰就是網路中你自己的這台電腦，不管它實際名字是什麼，你都可以使用 <code>localhost</code>來訪問。它使用到<code>port 4567</code>。</li>
<li>連接成功以後，瀏覽器對 lib/gothonweb.rb<code>這個應用程式發出了HTTP請求(request)，要求訪問URL</code>/`，這通常是一個網站的第一個URL。</li>
<li>在<code>lib/gothonweb.rb</code> 裡，我們有一個程式碼區段，裡面包含了 URL 的匹配關係。我們這裡只定義了一組匹配，那就是「/」。它的含義是：如果有人使用瀏覽器訪問 <code>/</code> 這一級目錄，Sinatra 將找到它，從而用它處理這個瀏覽器請求。</li>
<li>Sinatra 呼叫匹配到的程式碼區段，這段程式碼只簡單的回傳了一個字串傳回給瀏覽器。</li>
<li>最後 Sinatra 完成了對於瀏覽器請求的處理將響應(response)回傳給瀏覽器，於是你就看到了現在的頁面。</li>
</ol>


<p>確定你真的弄懂了這些，你需要畫一個示意圖，來理清資訊是如何從瀏覽器傳遞到 Sinata，再到 <code>/</code> 區段，再回到你的瀏覽器的。</p>

<h2>修正錯誤</h2>

<p>第一步，把第 6 行的 <code>greeting</code> 變數刪掉，然後重新刷瀏覽器。你應該會看到一個錯誤畫面，你可以通過這一頁豐富的資訊看出你的程式崩潰的原因。當然你已經知道出錯的原因是 <code>greeting</code>的賦值遺失了，不過 Sinatra還是會給你一個挺好的錯誤頁面，讓你能找到出錯的具體位置。試試在這個錯誤頁面上做以下操作：</p>

<ol>
<li>看看 <code>sinatra.error</code> 變數。</li>
<li>看看 <code>REQUEST_</code> 變數裡的資訊。裡面哪些知識是你已經熟悉了的。這是瀏覽器發給你的 gothonweb 應用程式的資訊。這些知識對於日常網頁瀏覽沒有什麼用處，但現在你要學會這些東西，以便寫出web應用程式來。</li>
</ol>


<h2>建立基本的模板</h2>

<p>你已經試過用各種方法把這個Sinatra 程式改錯，不過你有沒有注意到「Hello World」不是一個好 HTML 網頁呢？這是一個 web 應用，所以需要一個合適的HTML 響應頁面才對。為了達到這個目的，下一步你要做的是將「Hello World」以較大的綠色字體顯示出來。</p>

<p>第一步是建立一個 <code>lib/views/index.erb</code> 檔案，內容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">    &lt;head&gt;</span>
</span><span class='line'><span class="x">        &lt;title&gt;Gothons Of Planet Percal #25&lt;/title&gt;</span>
</span><span class='line'><span class="x">    &lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">greeting</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;p&gt;I just wanted to say &lt;em style=&quot;color: green; font-size: 2em;&quot;&gt;</span><span class="cp">&lt;%=</span> <span class="n">greeting</span> <span class="cp">%&gt;</span><span class="x">&lt;/em&gt;.</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;em&gt;Hello&lt;/em&gt;, world!</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>什麼是一個 <code>.erb</code> 的檔案？ERB 的全名是 <strong>E</strong>mbedded <strong>R</strong>u<strong>b</strong>y。<code>.erb</code> 檔案其實是一個內嵌一點 Ruby 程式碼的 HTML。如果你學過HTML的話，這些內容你看上去應該很熟悉。如果你沒學過HTML，那你應該去研究一下，試著用HTML寫幾個網頁，從而知道它的運作原理。既然這是一個 <code>erb</code> 模版，Sinatra 就會在模板中找到對應的位置，將參數的內容填充到模板中。例如每一個出現 `&lt;%= greeting %> 的位置，內容都會被替換成對應這個變數名的參數。</p>

<p>為了讓你的 <code>lib/gothonweb.rb</code> 處理模板，你需要寫一寫程式碼，告訴Sinatra 到哪裡去找到模板進行加載，以及如何渲染(render)這個模板，按下面的方式修改你的檔案：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;gothonweb/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sinatra&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Gothonweb</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">greeting</span> <span class="o">=</span> <span class="s2">&quot;Hello, World!&quot;</span>
</span><span class='line'>    <span class="n">erb</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:greeting</span> <span class="o">=&gt;</span> <span class="n">greeting</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>特別注意我改了 <code>/</code> 這個程式碼區段最後一行的內容，這樣它就可以呼叫 <code>erb</code> 然後把 greeting 變數傳給它。</p>

<p>改好上面的程式後，刷新一下瀏覽器中的網頁，你應該會看到一條和之前不同的綠色資訊輸出。你還可以在瀏覽器中通過「查看原始碼(View Source)」看到模板被渲染成了標準有效的HTML 原始碼。</p>

<p>這麼講也許有些太快了，我來詳細解釋一下模板的運作原理吧：</p>

<ol>
<li>在 <code>lib/gothonweb.rb</code> 你添加了一個 <code>erb</code> 函式呼叫。</li>
<li>這個 <code>erb</code> 函式知道怎麼載入 <code>lib/views</code> 目錄夾裡的 <code>.erb</code> 的檔案。它知道去抓哪些檔案（在這個例子裡是 <code>index.erb</code>)。因為你傳了一個參數進去（<code>erb :index …</code>)。</li>
<li>現在，當瀏覽器讀取 <code>/</code> 且 <code>lib/gothonweb.eb</code> 匹配然後執行 <code>get '/' do</code> 區段，它再也沒有只是回傳字串 <code>greeting</code>，而是呼叫 <code>erb</code> 然後傳入 <code>greeting</code> 作為一個變數。</li>
<li>最後，你讓 <code>lib/views/index.erb</code> 去檢查 <code>greeting</code> 這個變數，如果這個變數存在的話，就印出變數裡的內容。如果不存在的話，就會印出一個預設的訊息。</li>
</ol>


<p>要深入理解這個過程，你可以修改 <code>greeting 變數以及 HTML ，看看會友什麼效果。然後也創作另外一個叫做</code>lib/views/foo.erb<code>的模板。然後把</code>erb :index<code>改成</code>erb :foo<code>。從這個過程中你也可以看到，你傳入給</code>erb<code>的第一個參數只要匹配到</code>lib/views<code>下的</code>.erb` 檔案名稱，就可以被渲染出來了。</p>

<h2>加分習題</h2>

<ol>
<li>到 <a href="http://www.sinatrarb.com">Sinatra</a> 這個框架的官方網站去閱讀更多文件。</li>
<li>實驗一下你在上述網站中看到的所有東西，包括他們的範例程式碼。</li>
<li>閱讀有關於 HTML5 和 CSS3 相關的東西，自己練習寫幾個 <code>.html</code> 和 <code>.css</code> 文件。</li>
<li>如果你有一個懂 <strong>Rails</strong> 的朋友可以幫你的畫，你可以自己試著使用 Rails 完成一下習題 50,51,52，看看結果會是什麼樣子。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 49: 創造句子]]></title>
    <link href="http://lrthw.github.com/ex49/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex49</id>
    <content type="html"><![CDATA[<p>從我們這個小遊戲的詞彙掃描器中，我們應該可以得到類似下面的列表（你的看起來可能格式會不太一樣）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">003</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="no">Lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;go north&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="c1">#&lt;struct Lexicon::Pair token=:verb, word=&quot;go&quot;&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:direction, word=&quot;north&quot;&gt;] =&gt; nil </span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">004</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="no">Lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;kill the princess&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="c1">#&lt;struct Lexicon::Pair token=:verb, word=&quot;kill&quot;&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:stop, word=&quot;the&quot;&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:noun, word=&quot;princess&quot;&gt;] =&gt; nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">005</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="no">Lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;eat the bear&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="c1">#&lt;struct Lexicon::Pair token=:verb, word=&quot;eat&quot;&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:stop, word=&quot;the&quot;&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:noun, word=&quot;bear&quot;&gt;] =&gt; nil </span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">006</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="no">Lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;open the door and smack the bear in the nose&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="c1">#&lt;struct Lexicon::Pair token=:error, word=&quot;open&quot;&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:stop, word=&quot;the&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:noun, word=&quot;door&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:error, word=&quot;and&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:error, word=&quot;smack&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:stop, word=&quot;the&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:noun, word=&quot;bear&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:stop, word=&quot;in&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:stop, word=&quot;the&quot;&gt;, </span>
</span><span class='line'>    <span class="c1">#&lt;struct Lexicon::Pair token=:error, word=&quot;nose&quot;&gt;] =&gt; nil </span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">007</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在讓我們把它轉化成遊戲可以使用的東西，也就是一個 Sentence 類。</p>

<p>如果你還記得學校學過的東西的話，一個句子是由這樣的結構組成的：</p>

<blockquote><p>主語(Subject) + 謂語(動詞Verb) + 賓語(Object)</p></blockquote>

<p>很顯然實際的句子可能會比這複雜，而你可能已經在英語的語法課上面被折騰得夠嗆了。我們的目的，是將上面的 struct 列表轉換為一個 Sentence 物件，而這個對象又包含主謂賓各個成員。</p>

<h2>匹配(Match) And 窺視(Peek)</h2>

<p>為了達到這個效果，你需要四樣工具：</p>

<ol>
<li>一個循環存取 struct 列表的方法，這挺簡單的。</li>
<li>「匹配」我們的主謂賓設置中不同種類 struct 的方法。</li>
<li>一個「窺視」潛在struct的方法，以便做決定時用到。</li>
<li>「跳過(skip)」我們不在乎的內容的方法，例如形容詞、冠詞等沒有用處的詞彙。</li>
<li>我們使用 peek 函式查看 struct 列表中的下一個成員，做匹配以後再對它做下一步動作。讓我們先看看這個 peek 函式：</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">word_list</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">token</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>很簡單。再看看 match 函式：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">expecting</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">word_list</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">word</span><span class="o">.</span><span class="n">token</span> <span class="o">==</span> <span class="n">expecting</span>
</span><span class='line'>      <span class="n">word</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="kp">nil</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>還是很簡單，最後我們看看 skip 函式:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">skip</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">word_type</span><span class="p">)</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span> <span class="o">==</span> <span class="n">word_type</span>
</span><span class='line'>    <span class="n">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">word_type</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以你現在的水準，你應該可以看出它們的功能來。確認自己真的弄懂了它們。</p>

<h2>句子的語法</h2>

<p>有了工具，我們現在可以從 struct 列表來構建句子(Sentence)對象了。我們的處理流程如下：</p>

<ol>
<li>使用 <code>peek</code> 識別下一個單詞。</li>
<li>如果這個單詞和我們的語法匹配，我們就調用一個函式來處理這部分語法。假設函式的名字叫 <code>parse_subject</code> 好了。</li>
<li>如果語法不匹配，我們就 <code>raise</code> 一個錯誤，接下來你會學到這方面的內容。</li>
<li>全部分析完以後，我們應該能得到一個 Sentence 物件，然後可以將其應用在我們的遊戲中。</li>
</ol>


<p>演示這個過程最簡單的方法是把程式碼展示給你讓你閱讀，不過這節習題有個不一樣的要求，前面是我給你測試程式碼，你照著寫出程式碼來，而這次是我給你的程序，而你要為它寫出測試程式碼來。</p>

<p>以下就是我寫的用來解析簡單句子的程式碼，它使用了 <code>ex48</code> 這個 Lexicon class。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ParserError</span> <span class="o">&lt;</span> <span class="no">Exception</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Sentence</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">subject</span><span class="p">,</span> <span class="n">verb</span><span class="p">,</span> <span class="n">object</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># remember we take Pair.new(:noun, &quot;princess&quot;) structs and convert them</span>
</span><span class='line'>    <span class="vi">@subject</span> <span class="o">=</span> <span class="n">subject</span><span class="o">.</span><span class="n">word</span>
</span><span class='line'>    <span class="vi">@verb</span> <span class="o">=</span> <span class="n">verb</span><span class="o">.</span><span class="n">word</span>
</span><span class='line'>    <span class="vi">@object</span> <span class="o">=</span> <span class="n">object</span><span class="o">.</span><span class="n">word</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">word_list</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">token</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">expecting</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">word_list</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">word</span><span class="o">.</span><span class="n">token</span> <span class="o">==</span> <span class="n">expecting</span>
</span><span class='line'>      <span class="n">word</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="kp">nil</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">skip</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span> <span class="o">==</span> <span class="n">token</span>
</span><span class='line'>    <span class="n">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">parse_verb</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>  <span class="n">skip</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:stop</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span> <span class="o">==</span> <span class="ss">:verb</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:verb</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">ParserError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Expected a verb next.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">parse_object</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>  <span class="n">skip</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:stop</span><span class="p">)</span>
</span><span class='line'>  <span class="n">next_word</span> <span class="o">=</span> <span class="n">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">next_word</span> <span class="o">==</span> <span class="ss">:noun</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:noun</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">next_word</span> <span class="o">==</span> <span class="ss">:direction</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:direction</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">ParserError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Expected a noun or direction next.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">parse_subject</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">subj</span><span class="p">)</span>
</span><span class='line'>  <span class="n">verb</span> <span class="o">=</span> <span class="n">parse_verb</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>  <span class="n">obj</span> <span class="o">=</span> <span class="n">parse_object</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="no">Sentence</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">subj</span><span class="p">,</span> <span class="n">verb</span><span class="p">,</span> <span class="n">obj</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">parse_sentence</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>  <span class="n">skip</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:stop</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">start</span> <span class="o">=</span> <span class="n">peek</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">start</span> <span class="o">==</span> <span class="ss">:noun</span>
</span><span class='line'>    <span class="n">subj</span> <span class="o">=</span> <span class="n">match</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="ss">:noun</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">parse_subject</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="n">subj</span><span class="p">)</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">start</span> <span class="o">==</span> <span class="ss">:verb</span>
</span><span class='line'>    <span class="c1"># assume the subject is the player then</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">parse_subject</span><span class="p">(</span><span class="n">word_list</span><span class="p">,</span> <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:noun</span><span class="p">,</span> <span class="s2">&quot;player&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">ParserError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Must start with subject, object, or verb not: </span><span class="si">#{</span><span class="n">start</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>關於異常(Exception)</h2>

<p>你已經簡單學過關於異常的一些東西，但還沒學過怎樣拋出(raise)它們。這節的程式碼示範了如何 raise。首先在最前面，你要定義好 <code>ParserException</code>這個類，而它又是 <code>Exception</code> 的一種。另外要注意我們是怎樣使用 <code>raise</code>這個關鍵字來拋出異常的。</p>

<p>你的測試程式碼應該也要測試到這些異常，這個我也會示範給你如何實現。</p>

<h2>你應該測試的東西</h2>

<p>為《習題49》寫一個完整的測試方案，確認程式碼中所有的東西都能正常工作，其中異常的測試——輸入一個錯誤的句子它會拋出一個異常來。</p>

<p>使用 <code>assert_raises</code> 這個函式來檢查異常，在 Test::Unit 的文件裡查看相關的內容，學著使用它寫針對「執行失敗」的測試，這也是測試很重要的一個方面。從文件中學會使用 <code>assert_raises</code>，以及一些別的函式。</p>

<p>寫完測試以後，你應該就明白了這段程式碼的運作原理，而且也學會了如何為別人的程式碼寫測試程式碼。相信我，這是一個非常有用的技能。</p>

<h2>加分習題</h2>

<ol>
<li>修改 <code>parse_</code> method，將它們放到一個類裡邊，而不僅僅是獨立的方法函式。這兩種設計你喜歡哪一種呢？</li>
<li>提高parser 對於錯誤輸入的抵禦能力，這樣即使使用者輸入了你預定義語彙之外的詞語，你的程式碼也能正常運行下去。</li>
<li>改進語法，讓它可以處理更多的東西，例如數字。</li>
<li>想想在遊戲裡你的 Sentence 類可以對使用者輸入做哪些有趣的事情。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 48: 更進階的使用者輸入]]></title>
    <link href="http://lrthw.github.com/ex48/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex48</id>
    <content type="html"><![CDATA[<p>你的遊戲可能一路跑得很爽，不過你處理使用者輸入的方式肯定讓你不勝其煩了。每一個房間都需要一套自己的語句，而且只有使用者完全輸入正確後才能執行。你需要一個設備，它可以允許使用者以各種方式輸入語彙。例如下面的幾種表述都應該被支援才對：</p>

<ul>
<li>open door</li>
<li>open the door</li>
<li>go THROUGH the door</li>
<li>punch bear</li>
<li>Punch The Bear in the FACE</li>
</ul>


<p>也就是說，如果使用者的輸入和常用英語很接近也應該是可以的，而你的遊戲要識別出它們的意思。為了達到這個目的，我們將寫一個模組專門做這件事情。這個模組裡邊會有若干個類，它們互相配合，接受使用者輸入，並且將使用者輸入轉換成你的遊戲可以識別的命令。</p>

<p>英語的簡單格式是這個樣子的：</p>

<ul>
<li>單詞由空格隔開。</li>
<li>句子由單詞組成。</li>
<li>語法控制句子的含義。</li>
</ul>


<p>所以最好的開始方式是先搞定如何得到使用者輸入的詞彙，並且判斷出它們是什麼。</p>

<h2>我們的遊戲語彙</h2>

<p>我在遊戲裡建立了下面這些語彙：</p>

<ul>
<li>表示方向: north, south, east, west, down, up, left, right, back.</li>
<li>動詞: go, stop, kill, eat.</li>
<li>修飾詞: the, in, of, from, at, it</li>
<li>名詞: door, bear, princess, cabinet.</li>
<li>數字詞: 由 0-9 構成的數字。</li>
</ul>


<p>說到名詞，我們會碰到一個小問題，那就是不一樣的房間會用到不一樣的一組名詞，不過讓我們先挑一小組出來寫程式，以後再做改進吧。</p>

<h2>如何斷句</h2>

<p>我們已經有了詞彙表，為了分析句子的意思，接下來我們需要找到一個斷句的方法。我們對於句子的定義是「空格隔開的單詞」，所以只要這樣就可以了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">stuff</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'><span class="n">words</span> <span class="o">=</span> <span class="n">stuff</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>目前做到這樣就可以了，不過這招在相當一段時間內都不會有問題。</p>

<h2>語彙結構</h2>

<p>一旦我們知道瞭如何將句子轉化成詞彙列表，剩下的就是逐一檢查這些詞彙，看它們是什麼類型。為了達到這個目的，我們將用到一個非常便利的 Ruby 資料結構「struct」。「struct」其實就是一個可以把一串的 attrbutes 綁在一起的方式，使用 accessor 函式，但不需要寫一個複雜的 class。它的建立方式就像這樣：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Pair</span> <span class="o">=</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:token</span><span class="p">,</span> <span class="ss">:word</span><span class="p">)</span>
</span><span class='line'><span class="n">first_word</span> <span class="o">=</span> <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;direction&quot;</span><span class="p">,</span> <span class="s2">&quot;north&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">second_word</span> <span class="o">=</span> <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;verb&quot;</span><span class="p">,</span> <span class="s2">&quot;go&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">sentence</span> <span class="o">=</span> <span class="o">[</span><span class="n">first_word</span><span class="p">,</span> <span class="n">second_word</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>這建立了一對 (TOKEN, WORD) 可以讓你看到 word 和在裡面做事。</p>

<p>這只是一個例子，不過最後做出來的樣子也差不多。你接受使用者輸入，用split 將其分隔成單詞列表，然後分析這些單詞，識別它們的類型，最後重新組成一個句子。</p>

<h2>掃描輸入資料</h2>

<p>現在你要寫的是詞彙掃描器。這個掃描器會將使用者的輸入字符串當做參數，然後返回由多個(TOKEN, WORD) struct 組成的列表，這個列表實現類似句子的功能。如果一個單詞不在預定的詞彙表中，那它返回時 WORD 應該還在，但TOKEN 應該設置成一個專門的錯誤標記。這個錯誤標記將告訴使用者哪裡出錯了。</p>

<p>有趣的地方來了。我不會告訴你這些該怎樣做，但我會寫一個「單元測試(unit test)」，而你要把掃描器寫出來，並保證單元測試能夠正常通過。</p>

<h2>Exceptions And Numbers</h2>

<p>有一件小事情我會先幫幫你，那就是數字轉換。為了做到這一點，我們會作一點弊，使用「異常(exceptions)」來做。「異常」指的是你運行某個函數時得到的錯誤。你的函數在碰到錯誤時，就會「提出(raise)」一個「異常」，然後你就要去處理(handle)這個異常。假如你在 IRB  裡寫了這些東西：</p>

<pre><code>ruby-1.9.2-p180 :001 &gt; Integer("hell")
ArgumentError: invalid value for Integer(): "hell"
    from (irb):1:in `Integer'
    from (irb):1
    from /home/rob/.rvm/rubies/ruby-1.9.2-p180/bin/irb:16:in `&lt;main&gt;'
</code></pre>

<p>這個 <code>ArgumentError</code> 就是 <code>Integer()</code> 函式拋出的一個異常。因為你給<code>Integer()</code> 的參數不是一個數字。<code>Integer()</code>函數其實也可以傳回一個值來告訴你它碰到了錯誤，不過由於它只能傳回整數值，所以很難做到這一點。它不能返回-1，因為這也是一個數字。 <code>Integer()</code>沒有糾結在它「究竟應該返回什麼」上面，而是提出了一個叫做<code>TypeError</code>的異常，然後你只要處理這個異常就可以了。</p>

<p>處理異常的方法是使用 <code>begin</code> 和 <code>rescue</code> 這兩個關鍵字：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">convert_number</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="nb">Integer</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">ArgumentError</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>你把要試著運行的程式碼放到「begin」的區段裡，再將出錯後要運行的程式碼放到「except」區段裡。在這裡，我們要試著呼叫 <code>Integer()</code> 去處理某個可能是數字的東西，如果中間出了錯，我們就「rescue」這個錯誤，然後返回 「nil」。</p>

<p>在你寫的掃描器裡面，你應該使用這個函數來測試某個東西是不是數字。做完這個檢查，你就可以聲明這個單詞是一個錯誤單詞了。</p>

<h2>What You Should Test</h2>

<p>這裡是你應該使用的測試檔案 <code>test/test_lexicon.rb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;test/unit&#39;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s2">&quot;../lib/lexicon&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">LexiconTests</span> <span class="o">&lt;</span> <span class="no">Test</span><span class="o">::</span><span class="no">Unit</span><span class="o">::</span><span class="no">TestCase</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Pair</span> <span class="o">=</span> <span class="no">Lexicon</span><span class="o">::</span><span class="no">Pair</span>
</span><span class='line'>  <span class="vc">@@lexicon</span> <span class="o">=</span> <span class="no">Lexicon</span><span class="o">.</span><span class="n">new</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_directions</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:direction</span><span class="p">,</span> <span class="s1">&#39;north&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">,</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;north&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;north south east&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:direction</span><span class="p">,</span> <span class="s1">&#39;north&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:direction</span><span class="p">,</span> <span class="s1">&#39;south&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:direction</span><span class="p">,</span> <span class="s1">&#39;east&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_verbs</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;go&quot;</span><span class="p">),</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:verb</span><span class="p">,</span> <span class="s1">&#39;go&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;go kill eat&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:verb</span><span class="p">,</span> <span class="s1">&#39;go&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:verb</span><span class="p">,</span> <span class="s1">&#39;kill&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:verb</span><span class="p">,</span> <span class="s1">&#39;eat&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_stops</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;the&quot;</span><span class="p">),</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:stop</span><span class="p">,</span> <span class="s1">&#39;the&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;the in of&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:stop</span><span class="p">,</span> <span class="s1">&#39;the&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:stop</span><span class="p">,</span> <span class="s1">&#39;in&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:stop</span><span class="p">,</span> <span class="s1">&#39;of&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_nouns</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;bear&quot;</span><span class="p">),</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:noun</span><span class="p">,</span> <span class="s1">&#39;bear&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;bear princess&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:noun</span><span class="p">,</span> <span class="s1">&#39;bear&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:noun</span><span class="p">,</span> <span class="s1">&#39;princess&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_numbers</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;1234&quot;</span><span class="p">),</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:number</span><span class="p">,</span> <span class="mi">1234</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;3 91234&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:number</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:number</span><span class="p">,</span> <span class="mi">91234</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_errors</span><span class="p">()</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;ASDFADFASDF&quot;</span><span class="p">),</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:error</span><span class="p">,</span> <span class="s1">&#39;ASDFADFASDF&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="vc">@@lexicon</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="s2">&quot;bear IAS princess&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="o">[</span><span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:noun</span><span class="p">,</span> <span class="s1">&#39;bear&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:error</span><span class="p">,</span> <span class="s1">&#39;IAS&#39;</span><span class="p">),</span>
</span><span class='line'>                 <span class="no">Pair</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:noun</span><span class="p">,</span> <span class="s1">&#39;princess&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>記住你要使用你的專案骨架來建立新專案項目，將這個 Test Case 寫下來（不許複製貼上！），然後編寫你的掃描器，直至所有的測試都能通過。注意細節並確認結果一切工作良好。</p>

<h2>設計提示</h2>

<p>集中一次實現一個測試，盡量保持簡單，只要把你的 <code>lexicon.rb</code> 詞彙表中所有的單詞放那裡就可以了。不要修改輸入的單詞表，不過你需要建立自己的新列表，裡邊包含你的語彙元組。另外，記得使用 <code>include?</code> 函式來檢查這些語彙陣列，以確認某個單詞是否在你的語彙表中。</p>

<h2>加分習題</h2>

<ol>
<li>改進單元測試，讓它覆蓋到更多的語彙。</li>
<li>向語彙列表添加更多的語彙，並且更新單元測試程式碼。</li>
<li>讓你的掃描器能夠識別任意大小寫的詞彙。更新你的單元測試以確認其功能。</li>
<li>找出另外一種轉換為數字的方法。</li>
<li>我的解決方案用了37 行程式碼，你的是更長還是更短呢？</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 47: 自動化測試]]></title>
    <link href="http://lrthw.github.com/ex47/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex47</id>
    <content type="html"><![CDATA[<p>為了確認遊戲的功能是否正常，你需要一遍一遍地在你的遊戲中輸入命令。這個過程是很枯燥無味的。如果能寫一小段程式碼用來測試你的程式碼豈不是更好？然後只要你對程序做了任何修改，或者添加了什麼新東西，你只要「跑一下你的測試」，而這些測試能確認程序依然能正確運行。這些自動測試不會抓到所有的bug，但可以讓你無需重複輸入命令運行你的程式碼，從而為你節約很多時間。</p>

<p>從這一章開始，以後的練習將不會有「你應該看到的結果」這一節，取而代之的是一個「你應該測試的東西」一節。從現在開始，你需要為自己寫的所有程式碼寫自動化測試，而這將讓你成為一個更好的程序員。</p>

<p>我不會試圖解釋為什麼你需要寫自動化測試。我要告訴你的是，你想要成為一個程式設計師，而程序的作用是讓無聊冗繁的工作自動化，測試軟件毫無疑問是無聊冗繁的，所以你還是寫點程式碼讓它為你測試的更好。</p>

<p>這應該是你需要的所有的解釋了。因為你寫單元測試的原因是讓你的大腦更加強健。你讀了這本書，寫了很多程式碼讓它們實現一些事情。現在你將更進一步，寫出懂得你寫的其他程式碼的程式碼。這個寫程式碼測試你寫的其他程式碼的過程將強迫你清楚的理解你之前寫的程式碼。這會讓你更清晰地了解你寫的程式碼實現的功能及其原理，而且讓你對細節的注意更上一個台階。</p>

<h2>撰寫 Test Case</h2>

<p>我們將拿一段非常簡單的程式碼為例，寫一個簡單的測試，這個測試將建立在上節我們創建的項目骨架上面。</p>

<p>首先從你的專案骨架創建一個叫做 <code>ex47</code> 的專案。確認該改名稱的地方都有改過，尤其是 <code>tests/ex47_tests.rb</code> 這處不要寫錯。</p>

<p>接下來建立一個簡單的 <code>ex47/lib/game.rb</code> 檔案，裡邊放一些用來被測試的程式碼。我們現在放一個傻乎乎的小 class 進去，用來作為我們的測試對象：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Room</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:paths</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">description</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="vi">@description</span> <span class="o">=</span> <span class="n">description</span>
</span><span class='line'>    <span class="vi">@paths</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">go</span><span class="p">(</span><span class="n">direction</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@paths</span><span class="o">[</span><span class="n">direction</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">add_paths</span><span class="p">(</span><span class="n">paths</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@paths</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">paths</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>一旦你有了這個檔案，修改你的 unit test 骨架變成這樣：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;test/unit&#39;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;../lib/ex47&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MyUnitTests</span> <span class="o">&lt;</span> <span class="no">Test</span><span class="o">::</span><span class="no">Unit</span><span class="o">::</span><span class="no">TestCase</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_room</span><span class="p">()</span>
</span><span class='line'>    <span class="n">gold</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;GoldRoom&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s2">&quot;&quot;&quot;This room has gold in it you can grab. There&#39;s a</span>
</span><span class='line'><span class="s2">                door to the north.&quot;&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">gold</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s2">&quot;GoldRoom&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">gold</span><span class="o">.</span><span class="n">paths</span><span class="p">,</span> <span class="p">{})</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_room_paths</span><span class="p">()</span>
</span><span class='line'>    <span class="n">center</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Center&quot;</span><span class="p">,</span> <span class="s2">&quot;Test room in the center.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">north</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;North&quot;</span><span class="p">,</span> <span class="s2">&quot;Test room in the north.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">south</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;South&quot;</span><span class="p">,</span> <span class="s2">&quot;Test room in the south.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="ss">:north</span> <span class="o">=&gt;</span> <span class="n">north</span><span class="p">,</span> <span class="ss">:south</span> <span class="o">=&gt;</span> <span class="n">south</span><span class="p">})</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">center</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:north</span><span class="p">),</span> <span class="n">north</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">center</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:south</span><span class="p">),</span> <span class="n">south</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_map</span><span class="p">()</span>
</span><span class='line'>    <span class="n">start</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Start&quot;</span><span class="p">,</span> <span class="s2">&quot;You can go west and down a hole.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">west</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Trees&quot;</span><span class="p">,</span> <span class="s2">&quot;There are trees here, you can go east.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">down</span> <span class="o">=</span> <span class="no">Room</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Dungeon&quot;</span><span class="p">,</span> <span class="s2">&quot;It&#39;s dark down here, you can go up.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">start</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="ss">:west</span> <span class="o">=&gt;</span> <span class="n">west</span><span class="p">,</span> <span class="ss">:down</span> <span class="o">=&gt;</span> <span class="n">down</span><span class="p">})</span>
</span><span class='line'>    <span class="n">west</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="ss">:east</span> <span class="o">=&gt;</span> <span class="n">start</span><span class="p">})</span>
</span><span class='line'>    <span class="n">down</span><span class="o">.</span><span class="n">add_paths</span><span class="p">({</span><span class="ss">:up</span> <span class="o">=&gt;</span> <span class="n">start</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">start</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:west</span><span class="p">),</span> <span class="n">west</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">start</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:west</span><span class="p">)</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:east</span><span class="p">),</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>    <span class="n">assert_equal</span><span class="p">(</span><span class="n">start</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:down</span><span class="p">)</span><span class="o">.</span><span class="n">go</span><span class="p">(</span><span class="ss">:up</span><span class="p">),</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這個文件 require 了你在 <code>lib/ex47.rb</code> 裡建立的 <code>Room</code>這個類，接下來我們要做的就是測試它。於是我們看到一系列的以 <code>test_</code> 開頭的測試函式，它們就是所謂的「Test Case」，每一個Test Case裡面都有一小段程式碼，它們會建立一個或者一些房間，然後去確認房間的功能和你期望的是否一樣。它測試了基本的房間功能，然後測試了路徑，最後測試了整個地圖。</p>

<p>這裡最重要的函數時 <code>assert_equal</code>，它保證了你設置的變數，以及你在<code>Room</code> 裡設置的路徑和你的期望相符。如果你得到錯誤的結果的話，Ruby 的 <code>Test::Unit</code> 模組將會印出一個錯誤信息，這樣你就可以找到出錯的地方並且修正過來。</p>

<h2>測試指南</h2>

<p>在寫測試程式碼時，你可以照著下面這些不是很嚴格的指南來做：</p>

<ol>
<li>測試腳本要放到 <code>tests/</code> 目錄下，並且命名為 <code>test_NAME.rb</code>。這樣做還有一個好處就是防止測試程式碼和別的程式碼互相混掉。</li>
<li>為你的每一個模組寫一個測試。</li>
<li>Test Cast 函式保持簡短，但如果看上去不怎麼整潔也沒關係，Test Cast一般都有點亂。</li>
<li>就算Test Cast有些亂，也要試著讓他們保持整潔，把裡邊重複的程式碼刪掉。建立一些輔助函數來避免重複的程式碼。當你下次在改完程式碼需要改測試的時候，你會感謝我這一條建議的。重複的程式碼會讓修改測試變得很難操作。</li>
<li>最後一條是別太把測試當做一回事。有時候，更好的方法是把程式碼和測試全部刪掉，然後重新設計程式碼。</li>
</ol>


<h2>你應該看到的結果</h2>

<pre><code>$ ruby test_ex47.rb 
Loaded suite test_ex47
Started
...
Finished in 0.000353 seconds.

3 tests, 7 assertions, 0 failures, 0 errors, 0 skips

Test run options: --seed 63537
</code></pre>

<p>That&#8217;s what you should see if everything is working right. Try causing an error to see what that looks like and then fix it.</p>

<h2>加分習題</h2>

<ol>
<li>仔細閱讀 <code>Test::Unit</code>相關的文件，再去了解一下其他的替代方案。</li>
<li>了解一下 <code>Rspec</code>，看看它是否可以幹得更出色。</li>
<li>改進你遊戲裡的 Room，然後用它重建你的遊戲。這次重寫，你需要一邊寫程式碼，一般把單元測試寫出來。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 46: 一個專案骨架]]></title>
    <link href="http://lrthw.github.com/ex46/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex46</id>
    <content type="html"><![CDATA[<p>這裡你將學會如何建立一個專案「骨架」目錄。這個骨架目錄具備讓專案跑起來的所有基本內容。它裡邊會包含你的專案檔案佈局、自動化測試程式碼，模組，以及安裝腳本。當你建立一個新專案的時候，只要把這個目錄複製過去，改改目錄的名字，再編輯裡面的檔案就行了。</p>

<h2>骨架內容: Linux/OSX</h2>

<p>首先使用下述命令創建你的骨架目錄：</p>

<pre><code>$ mkdir -p projects
$ cd projects/
$ mkdir skeleton
$ cd skeleton
$ mkdir bin lib lib/NAME test
</code></pre>

<p>我使用了一個叫 projects 的目錄，用來存放我自己的各個專案。然後我在裡邊建立了一個叫做 skeleton 的檔案夾，這就是我們新專案的基礎目錄。其中叫做 NAME 的檔案夾是你的專案的主檔案夾，你可以將它任意取名。</p>

<p>接下來我們要配置一些初始檔案：</p>

<pre><code>$ touch lib/NAME.rb
$ touch lib/NAME/version.rb
</code></pre>

<p>然後我們可以建立一個 <code>NAME.gemspec</code> 的檔案在我們的專案的根目錄，這個檔案在安裝專案的時候我們會用到它：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- encoding: utf-8 -*-</span>
</span><span class='line'><span class="vg">$:</span><span class="o">.</span><span class="n">push</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s2">&quot;../lib&quot;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;NAME/version&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Gem</span><span class="o">::</span><span class="no">Specification</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>        <span class="o">=</span> <span class="s2">&quot;NAME&quot;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>     <span class="o">=</span> <span class="no">NAME</span><span class="o">::</span><span class="no">VERSION</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">authors</span>     <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Rob Sobers&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">email</span>       <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;rsobers@gmail.com&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span>    <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>     <span class="o">=</span> <span class="sx">%q{TODO: Write a gem summary}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="sx">%q{TODO: Write a gem description}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">rubyforge_project</span> <span class="o">=</span> <span class="s2">&quot;NAME&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">files</span>         <span class="o">=</span> <span class="sb">`git ls-files`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">test_files</span>    <span class="o">=</span> <span class="sb">`git ls-files -- {test,spec,features}/*`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">executables</span>   <span class="o">=</span> <span class="sb">`git ls-files -- bin/*`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">require_paths</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;lib&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>編輯這個檔案，把自己的聯絡方式寫進去，然後放到那裡就行了。</p>

<p>最後你需要一個簡單的測試專用(我們將會在下一節中提到 Test )的骨架檔案叫 <code>test/test_NAME.rb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;test/unit&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MyUnitTests</span> <span class="o">&lt;</span> <span class="no">Test</span><span class="o">::</span><span class="no">Unit</span><span class="o">::</span><span class="no">TestCase</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">setup</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;setup!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">teardown</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;teardown!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_basic</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;I RAN!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>安裝 Gems</h2>

<p>Gems 是 Ruby 的套件系統，所以你需要知道怎麼安裝它和使用它。不過問題就來了。我的本意是讓這本書越清晰越乾淨越好，不過安裝軟體的方法是在是太多了，如果我要一步一步寫下來，那10 頁都寫不完，而且告訴你吧，我本來就是個懶人。</p>

<p>所以我不會提供詳細的安裝步驟了，我只會告訴你需要安裝哪些東西，然後讓你自己搞定。這對你也有好處，因為你將打開一個全新的世界，裡邊充滿了其他人發佈的軟體。</p>

<p>接下來你需要安裝下面的軟體套件：</p>

<ul>
<li>git - <a href="http://git-scm.com/">http://git-scm.com/</a></li>
<li>rake - <a href="http://rake.rubyforge.org/">http://rake.rubyforge.org/</a></li>
<li>rvm - <a href="https://rvm.beginrescueend.com/">https://rvm.beginrescueend.com/</a></li>
<li>rubygems - <a href="http://rubygems.org/pages/download">http://rubygems.org/pages/download</a></li>
<li>bundler - <a href="http://gembundler.com/">http://gembundler.com/</a></li>
</ul>


<p>不要只是手動下載並且安裝這些軟體套件，你應該看一下別人的建議，尤其看看針對你的操作系統別人是怎樣建議你安裝和使用的。同樣的軟體套件在不一樣的操作系統上面的安裝方式是不一樣的，不一樣版本的 Linux 和 OSX 會有不同，而 Windows 更是不同。</p>

<p>我要預先警告你，這個過程會是相當無趣。在業內我們將這種事情叫做「yak shaving(剃犛牛)」。它指的是在你做一件有意義的事情之前的一些準備工作，而這些準備工作又是及其無聊冗繁的。你要做一個很酷的 Ruby 專案，但是創建骨架目錄需要你安裝一些軟體到件，而安裝軟體套件之前你還要安裝package installer (軟件套件安裝工具)，而要安裝這個工具你還得先學會如何在你的操作系統下安裝軟體，真是煩不勝煩呀。</p>

<p>無論如何，還是克服困難吧。你就把它當做進入程式俱樂部的一個考驗。每個程式設計師都會經歷這條道路，在每一段「酷」的背後總會有一段「煩」的。</p>

<h2>使用這個骨架</h2>

<p>剃犛牛的事情已經做的差不多了，以後每次你要新建一個專案時，只要做下面的事情就可以了：</p>

<ol>
<li>拷貝這份骨架目錄，把名字改成你新專案的名字。</li>
<li>再將 <code>NAME</code>模組和 <code>NAME.rb</code> 更名為你需要的名字，它可以是你專案的名字，當然別的名字也行。</li>
<li>編輯你的 <code>NAME.gemspec</code> 檔案，讓它包含你新專案的相關資訊。</li>
<li>重命名 <code>test/test_NAME.rb</code>，讓它的名字匹配到你模組的名字。</li>
<li>開始寫程式吧。</li>
</ol>


<h2>小測驗</h2>

<p>這節練習沒有加分習題，不過需要你做一個小測驗：</p>

<ol>
<li>找文件閱讀，學會使用你前面安裝了的軟體套件。</li>
<li>閱讀關於<code>NAME.gemspec</code> 的文件，看它裡邊可以做多少配置。</li>
<li>建立一個專案，在 <code>NAME.rb</code> 裡寫一些程式碼。</li>
<li>在 <code>bin</code> 目錄下放一個可以運行的腳本，找材料學習一下怎樣建立可以在系統下運行的 Ruby 腳本。</li>
<li>確定你建立的 <code>bin</code> 教本，有在 <code>NAME.gemspec</code> 中被參照到，這這樣你安裝時就可以連它安裝進去。</li>
<li>使用你的 <code>NAME.gemspec</code> 和 <code>gem build</code>、<code>gem install</code> 來安裝你寫的程式和確定它能用。然後使用 <code>gem uninstall</code> 去移除它。</li>
<li>弄懂如何使用 Bundler 來自動建立一個骨架目錄。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 45: 物件、類和從屬關係]]></title>
    <link href="http://lrthw.github.com/ex45/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex45</id>
    <content type="html"><![CDATA[<p>有一個重要的概念你需要弄明白，那就是 <code>Class</code>「類」和 <code>Object</code>「物件」的區別。問題在於，class 和 object 並沒有真正的不同。它們其實是同樣的東西，只是在不同的時間名字不同罷了。我用禪語來解釋一下吧：</p>

<p><code>魚(Fish)和鮭魚(Salmon)有什麼區別？</code></p>

<p>這個問題有沒有讓你有點暈呢？說真的，坐下來想一分鐘。我的意思是說，魚和鮭魚是不一樣，不過它們其實也是一樣的是不是？泥鰍是魚的一種，所以說沒什麼不同，不過泥鰍又有些特別，它和別的種類的魚的確不一樣，比如鮭魚和比目魚就不一樣。所以鮭魚和魚既相同又不同。怪了。</p>

<p>這個問題讓人暈的原因是大部分人不會這樣去思考問題，其實每個人都懂這一點，你無須去思考魚和鮭魚的區別，因為你知道它們之間的關係。你知道鮭魚是魚的一種，而且魚還有別的種類，根本就沒必要去思考這類問題。</p>

<p>讓我們更進一步，假設你有一隻水桶，裡邊有三條鮭魚。假設你的好人卡多到沒地方用，於是你給它們分別取名叫Frank，Joe，Mary。現在想想這個問題：</p>

<p><code>Mary 和鮭魚有什麼區別？</code></p>

<p>這個問題一樣的奇怪，但比起魚和鮭魚的問題來還好點。你知道 Mary是一條鮭魚，所以他並沒什麼不同，他只是鮭魚的一個「實例(instance)」。Joe 和Frank 一樣也是鮭魚的實例。我的意思是說，它們是由鮭魚創建出來的，而且代表著和鮭魚一樣的屬性。</p>

<p>所以我們的思維方式是（你可能會有點不習慣）：魚是一個「類(class)」，鮭魚是一個「類(class)」，而 Mary 是一個「物件(object)」。仔細想想，然後我再一點一點慢慢解釋給你。</p>

<p>魚是一個「類」，表示它不是一個真正的東西，而是一個用來描述具有同類屬性的實例的概括性詞彙。你有鰭？你有鰾？你住在水裡？好吧那你就是一條魚。</p>

<p>後來一個博士路過，看到你的水桶，於是告訴你：「小伙子，你這些魚是鮭魚。」 專家一出，真相即現。並且專家還定義了一個新的叫做​​「鮭魚」的「類」，而這個「類」又有它特定的屬性。長鼻子？紅肉？體型大？住在海裡或是乾淨新鮮的水裡？吃起來味道不錯？那你就是一條鮭魚。</p>

<p>最後一個廚師過來了，他跟博士說：「非也非也，你看到的是鮭魚，我看到的是Mary，而且我要把 Mary 淋上美味醬料做一道小菜。 」於是你就有了一隻叫做Mary 的鮭魚的「實例(instance)」（鮭魚也是魚的一個「實例」），並且你使用了它（把它塞到你的胃裡了），這樣它就是一個​​「物件(object)」。</p>

<p>這會你應該了解了：Mary 是鮭魚的成員，而鮭魚又是魚的成員。這裡的關係式：物件屬於某個類，而某個類又屬於另一個類。</p>

<h2>寫成程式碼是什麼樣子</h2>

<p>這個概念有點詭異，不過實話說，你只要在建立和使用class的時候操心一下就可以了。我來給你兩個區分 <code>Class</code> 和 <code>Object</code>的小技巧。</p>

<p>首先針對類和物件，你需要學會兩個說法，「is-a(是啥)」和「has-a(有啥)」。「是啥」要用在談論「兩者以類的關係互相關聯」的時候，而「有啥」要用在「兩者無共同點，僅是互為參照」的時候。</p>

<p>接下來，通讀這段程式碼，將每一個註解為<code>##??</code>的位置標明他是「is-a」還是「has-a」的關係，並講明白這個關係是什麼。在程式碼的開始我還舉了幾個例子，所以你只要寫剩下的就可以了。</p>

<p>記住，「是啥」指的是魚和鮭魚的關係，而「有啥」指的是鮭魚和烤肉架的關係。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">## Animal is-a object (yes, sort of confusing) look at the extra credit</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Animal</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Dog</span> <span class="o">&lt;</span> <span class="no">Animal</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">## ??</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Cat</span> <span class="o">&lt;</span> <span class="no">Animal</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">## ??</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:pet</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">## ??</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">## Person has-a pet of some kind</span>
</span><span class='line'>    <span class="vi">@pet</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Employee</span> <span class="o">&lt;</span> <span class="no">Person</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">salary</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">## ?? hmm what is this strange magic?</span>
</span><span class='line'>    <span class="k">super</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">## ??</span>
</span><span class='line'>    <span class="vi">@salary</span> <span class="o">=</span> <span class="n">salary</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Fish</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Salmon</span> <span class="o">&lt;</span> <span class="no">Fish</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Halibut</span> <span class="o">&lt;</span> <span class="no">Fish</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## rover is-a Dog</span>
</span><span class='line'><span class="n">rover</span> <span class="o">=</span> <span class="no">Dog</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Rover&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">satan</span> <span class="o">=</span> <span class="no">Cat</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Satan&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">mary</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Mary&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">mary</span><span class="o">.</span><span class="n">pet</span> <span class="o">=</span> <span class="n">satan</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">frank</span> <span class="o">=</span> <span class="no">Employee</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Frank&quot;</span><span class="p">,</span> <span class="mi">120000</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">frank</span><span class="o">.</span><span class="n">pet</span> <span class="o">=</span> <span class="n">rover</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">flipper</span> <span class="o">=</span> <span class="no">Fish</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">crouse</span> <span class="o">=</span> <span class="no">Salmon</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## ??</span>
</span><span class='line'><span class="n">harry</span> <span class="o">=</span> <span class="no">Halibut</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>


<h2>加分習題</h2>

<ol>
<li>有沒有辦法把 <code>Class</code> 當作 <code>Object</code> 使用呢？</li>
<li>在習題中為 animals、fish、還有people 添加一些函式，讓它們做一些事情。看看當函數在 Animal 這樣的「基類(base class)」裡和在 Dog 裡有什麼區別。</li>
<li>找些別人的程式碼，理清裡邊的「是啥」和「有啥」的關係。</li>
<li>使用 Array 和 Hash 建立一些新的一對應多的「has-many」的關係。</li>
<li>你認為會有一種「has-many」的關係嗎？閱讀一下關於「多重繼承(multiple inheritance)」的資料，然後儘量避免這種用法。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 44: 評估你的遊戲]]></title>
    <link href="http://lrthw.github.com/ex44/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex44</id>
    <content type="html"><![CDATA[<p>這節練習的目的是檢查評估你的遊戲。也許你只完成了一半，卡在那裡沒有進行下去，也許你勉強做出來了。不管怎樣，我們將串一下你應該弄懂的一些東西，並確認你的遊戲裡有使用到它們。我們將學習如何用正確的格式構建class，使用class 的一些通用習慣，另外還有很多的「書本知識」讓你學習。</p>

<p>為什麼我會讓你先行嘗試，然後才告訴你正確的做法呢？因為從現在開始你要學會「自給自足」，以前是我牽著你前行，以後就得靠你自己了。後面的習題我只會告訴你你的任務，你需要自己去完成，在你完成後我再告訴你如何可以改進你的作業。</p>

<p>一開始你會覺得很困難並且很不習慣，但只要堅持下去，你就會培養出自己解決問題的能力。你還會找出創新的方法解決問題，這比從課本中拷貝解決方案強多了。</p>

<h2>函式的風格</h2>

<p>以前我教過的怎樣寫好函式的方法一樣是適用的，不過這裡要添加幾條：</p>

<ul>
<li>由於各種各樣的原因，程序員將 class (類)裡邊的函式稱作method（方法）。很大程度上這只是個市場策略（用來推銷OOP），不過如果你把它們稱作「函式」的話，是會有囉嗦的人跳出來糾正你的。如果你覺得他們太煩了，你可以告訴他們從數學方面示範一下「函式」和「方法」究竟有什麼不同，這樣他們會很快閉嘴的。</li>
<li>在你使用class的過程中，很大一部分時間是告訴你的 class如何「做事情」。給這些函式命名的時候，與其命名成一個名詞，不如命名為一個動詞，作為給class的一個命令。就和陣列中 的 <code>pop</code> 函式一樣，它相當於說：「嘿，陣列，把這東西給我 <code>pop</code>出去。」它的名字不是 <code>remove_from_end_of_list</code>，因為即使它的功能的確是這樣，這一個字串也不是一個命令。</li>
<li>讓你的函式保持簡單小巧。由於某些原因，有些人開始學習 class 後就會忘了這一條。</li>
</ul>


<h2>Classh (類) 的風格</h2>

<ul>
<li>你的 class 應該使用「camel case（駝峰式大小寫）」，例如你應該使用<code>SuperGoldFactory</code> 而不是 <code>super_gold_factory</code></li>
<li>你的 <code>initialize</code> 不應該做太多的事情，這會讓 class 變得難以使用。</li>
<li>你的其它函式應該使用「underscore format（下劃線隔詞）」，所以你可以寫<code>my_awesome_hair</code>，而不是 <code>myawesomehair</code> 或者 <code>MyAwesomeHair</code>。</li>
<li>用一致的方式組織函式的參數。如果你的 class 需要處理 users、dogs、和cats，就保持這個次序（特別情況除外）。如果一個函式的參數是(dog, cat, user)，另一個的是(user, cat, dog) ，這會讓函式使用起來很困難。</li>
<li>不要對全局變數或者來自模組的變數進行重定義或者賦值，讓這些東西自顧自就行了。</li>
<li>不要一根筋式地維持風格一致性，這是思維力底下的妖怪嘍囉做的事情。一致性是好事情，不過愚蠢地跟著別人遵從一些白痴口號是錯誤的行為——這本身就是一種壞的風格。好好為自己著想吧。</li>
</ul>


<h2>程式碼風格</h2>

<ul>
<li>為了以方便他人閱讀，在自己的程式碼之間留下一些空白。你將會看到一些很差的程式設計師，他們寫的程式碼還算通順，但程式碼之間沒有任何空間。這種風格在任何程式語言中都是壞習慣，人的眼睛和大腦會通過空白和垂直對齊的位置來掃描和區隔視覺元素，如果你的程式碼裡沒有任何空白，這相當於為你的程式碼上了迷彩裝。</li>
<li>如果一段程式碼你無法朗讀出來，那麼這段程式碼的可讀性可能就有問題。如你找不到讓某個東西易用的方法，試著也朗讀出來。這樣不僅會逼迫你慢速而且真正仔細閱讀過去，還會幫你找到難讀的段落，從而知道那些程式碼的易讀性需要作出改進。</li>
<li>學著模仿別人的風格寫程式，直到哪天你找到你自己的風格為止。</li>
<li>一旦你有了自己的風格，也別把它太當回事。程式設計師工作的一部分就是和別人的程式碼打交道，有的人審美觀就是很差。相信我，你的審美觀某一方面一定也很差，只是你從未意識到而已。</li>
<li>如果你發現有人寫的程式碼風格你很喜歡，那就模仿他們的風格。</li>
</ul>


<h2>好的註釋</h2>

<ul>
<li>有程序員會告訴你，說你的程式碼需要有足夠的可讀性，這樣你就無需寫註釋了。他們會以自己接近官腔的聲音說「所以你永遠都不應該寫程式碼註釋。」這些人要嘛是一些顧問型的人物，如果別人無法使用他們的程式碼，就會付更多錢給他們讓他們解決問題。要嘛他們能力不足，從來沒有跟別人合作過。別理會這些人，好好寫你的註解。</li>
<li>寫註解的時候，描述清楚為什麼你要這樣做。程式碼只會告訴你「這樣實現」，而不會告訴你「為什麼要這樣實現」，而後者比前者更重要。</li>
<li>當你為函式寫文件註解的時候，記得為別的程式碼使用者也寫些東西。你不需要狂寫一大堆，但一兩句話謝謝這個函式的用法還是很有用的。</li>
<li>最後要說的是，雖然註解是好東西，太多的註解就不見得是了。而且註解也是需要維護的，你要盡量讓註解短小精悍一語中的，如果你對程式碼做了更改，記得檢查並更新相關的註解，確認它們還是正確的。</li>
</ul>


<h2>評估你的遊戲</h2>

<p>現在我要求你假裝成是我，板起臉來，把你的程式碼打印出來，然後拿一支紅筆，把程式碼中所有的錯誤都標出來。你要充分利用你在本​​章以及前面學到的知識。等你批改完了，我要求你把所有的錯誤改對。這個過程我需要你多重複幾次，爭取找到更多的可以改進的地方。使用我前面教過的方法，把程式碼分解成最細小的單元一一進行分析。</p>

<p>這節練習的目的是訓練你對於細節的關注程度。等你檢查完自己的程式碼，再找一段別人的程式碼用這種方法檢查一遍。把程式碼打印出來，檢查出所有程式碼和風格方面的錯誤，然後試著在不改壞別人程式碼的前提下把它們修改正確。</p>

<p>這週我要求你的事情就是批改和糾錯，包含你自己的程式碼和別人的程式碼，再沒有別的了。這節習題難度還是挺大，不過一旦你完成了任務，你學過的東西就會牢牢記在腦中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 43: 你來製作一個遊戲]]></title>
    <link href="http://lrthw.github.com/ex43/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex43</id>
    <content type="html"><![CDATA[<p>你要開始學會自食其力了。通過閱讀這本書你應該已經學到了一點，那就是你需要的所有的資訊網路上都有，你只要去搜尋就能找到。唯一困擾你的就是如何使用正確的詞彙進行搜尋。學到現在，你在挑選搜尋關鍵字方面應該已經有些感覺了。現在已經是時候了，你需要嘗試寫一個大的專案，並讓它運行起來。</p>

<p>以下是你的需求：</p>

<ol>
<li>製作一個截然不同的遊戲。</li>
<li>使用多個檔案，並使用 <code>require</code>呼叫這些檔案。確認自己知道 <code>require</code>的用法。</li>
<li>對於每個房間使用一個 <code>class</code>，<code>class</code> 的命名要能體現出它的用處。例如<code>GoldRoom</code>、<code>KoiPondRoom</code>。</li>
<li>你的執行器程式碼應該了解這些房間，所以創建一個 class 來呼叫並且記錄這些房間。有很多種方法可以達到這個目的，不過你可以考慮讓每個房間傳回下一個房間，或者設置一個變數，讓它指定下一個房間是什麼。</li>
</ol>


<p>其他的事情就全靠你了。花一個星期完成這件任務，做一個你能做出來的最好的遊戲。使用你學過的任何東西（類，函數，Hash，陣列……）來改進你的程式。這節課的目的是教你如何構建 class 出來，而這些 class 又能調用到其它 Ruby 檔案中的 class。</p>

<p>我不會詳細地告訴你告訴你怎樣做，你需要自己完成。試著下手吧，寫程式就是解決問題的過程，這就意味著你要嘗試各種可能性，進行實驗，經歷失敗，然後丟掉你做出來的東西重頭開始。當你被某個問題卡住的時候，你可以向別人尋求幫助，並把你的程式貼出來給他們看。如果有人刻薄你，別理他們，你只要集中精力在幫你的人身上就可以了。持續修改和清理你的程式碼，直到它完整可執行為止，然後再研究一下看它還能不能被改進。</p>

<p>祝你好運，下個星期你做出遊戲後我們再見。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 42: 物以類聚]]></title>
    <link href="http://lrthw.github.com/ex42/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex42</id>
    <content type="html"><![CDATA[<p>雖說將函式放到 Hash 裡是很有趣的一件事情，你應該也會想到「如果 Ruby 內建這件事情該多好」。事實上也的確有，那就是 <code>class</code> 這個關鍵字。你可以使用 <code>class</code> 創建更棒的 「函式 Hash」，比你在上節練習中做的強大多了。Class（類）有著各種各樣強​​大的功能和用法，但本書不會深入講這些內容，在這裡，你只要你學會把它們當作高級的「函式字典」使用就可以了。</p>

<p>用到「class」的程式語言被稱作「Object Oriented Programming（面向對象編程式語言」。這是一種傳統的寫程式的方式，你需要做出「東西」來，然後你「告訴」這些東西去完成它們的工作。類似的事情你其實已經做過不少了，只不過還沒有意識到而已。記得你做過的這個吧：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">stuff</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;Test&#39;</span><span class="p">,</span> <span class="s1">&#39;This&#39;</span><span class="p">,</span> <span class="s1">&#39;Out&#39;</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其實你這裡已經使用了 <code>class</code>。 stuff 這個變數其實是一個 Array Class。而 <code>stuff.join()</code> 呼叫了 <code>Array</code> 函式中的 <code>join</code>，然後傳遞了字串 <code>' '</code>（就是一個空格），這也是一個 class —— 它是一個 <code>String</code> class (字符串類)。到處都是 class！</p>

<p>其實你這裡已經使用了 <code>class</code>。<code>stuff</code>這個變量其實是一個list <code>class</code>（列表類）。而&#8217; &#8216;.join(stuff)裡調用函式join的字符串&#8217; &#8216;（就是一個空格）也是一個<code>class</code> ——它是一個string <code>class</code> (字符串類)。到處都是<code>class</code>！</p>

<p>還有一個概念是 object（物件），不過我們暫且不提。當你建立過幾個<code>class</code> 後就會學到了。怎樣建立<code>class</code>呢？和你建立 <code>ROOMS</code> Hash 的方法差不多，但其實更簡單：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TheThing</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:number</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">()</span>
</span><span class='line'>    <span class="vi">@number</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">some_function</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;I got called.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">add_me_up</span><span class="p">(</span><span class="n">more</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@number</span> <span class="o">+=</span> <span class="n">more</span>
</span><span class='line'>    <span class="k">return</span> <span class="vi">@number</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># two different things</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">TheThing</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">TheThing</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">some_function</span><span class="p">()</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">some_function</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">add_me_up</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">add_me_up</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span><span class="o">.</span><span class="n">add_me_up</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span><span class="o">.</span><span class="n">add_me_up</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">number</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span><span class="o">.</span><span class="n">number</span>
</span></code></pre></td></tr></table></div></figure>


<p>看到了在 <code>@number</code> 前面的 <code>@</code> 吧？這是一個實例變數 (instance variable)。每個在 <code>TheThing</code> 中你建立的實例都會擁有 <code>@number</code> 中自己的值。我們不能透過直接打 <code>a.number</code> 直接拿到 number。除非我們特別使用 <code>attr_reader :number</code>，宣告讓外界能存取資料。</p>

<p>若要讓 <code>@number</code> write-only，我們可以使用 <code>attr_writer :number</code>。為了讓它可以既可讀又可寫，我們可以使用 <code>attr_accessor :number</code>。Ruby 使用了這些優良的物件導向原則來封裝資料。</p>

<p>下來，看到 <code>initialize</code> 函式了嗎？這就是你為建立 <code>class</code> 設置內部變數的方式。你可以用以 <code>@</code> 符號開頭的方式去設定它們。另外看到我們使用了<code>add_me_up()</code> 為你建立 <code>number</code>加值。後面你可以看到我們怎樣可以使用這種方法為數字加值，然後印出來。</p>

<p>Class 是很強大的東西，你應該好好讀讀相關的東西。盡可能多找些東西讀並且多多實驗。你其實知道它們該怎麼用，只要試試就知道了。其實我馬上就要去練吉他了，所以我不會讓你寫練習了。你將使用 <code>class</code> 寫一個練習。</p>

<p>接下來我們將把習題 41 的內容重寫一遍，不過這回我們將使用 <code>class</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Game</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">start</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@quips</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;You died.  You kinda suck at this.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Nice job, you died ...jackass.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Such a luser.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;I have a small puppy that&#39;s better at this.&quot;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>    <span class="vi">@start</span> <span class="o">=</span> <span class="n">start</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;in init @start = &quot;</span> <span class="o">+</span> <span class="vi">@start</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prompt</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">play</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;@start =&gt; &quot;</span> <span class="o">+</span> <span class="vi">@start</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>    <span class="n">next_room</span> <span class="o">=</span> <span class="vi">@start</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">--------&quot;</span>
</span><span class='line'>      <span class="n">room</span> <span class="o">=</span> <span class="nb">method</span><span class="p">(</span><span class="n">next_room</span><span class="p">)</span>
</span><span class='line'>      <span class="n">next_room</span> <span class="o">=</span> <span class="n">room</span><span class="o">.</span><span class="n">call</span><span class="p">()</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">death</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="vi">@quips</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="vi">@quips</span><span class="o">.</span><span class="n">length</span><span class="p">())</span><span class="o">]</span>
</span><span class='line'>    <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">central_corridor</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The Gothons of Planet Percal #25 have invaded your ship and destroyed&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;your entire crew.  You are the last surviving member and your last&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;mission is to get the neutron destruct bomb from the Weapons Armory,&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;put it in the bridge, and blow the ship up after getting into an &quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;escape pod.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You&#39;re running down the central corridor to the Weapons Armory when&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;flowing around his hate filled body.  He&#39;s blocking the door to the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Armory and about to pull a weapon to blast you.&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>    <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;shoot!&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Quick on the draw you yank out your blaster and fire it at the Gothon.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;His clown costume is flowing and moving around his body, which throws&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;off your aim.  Your laser hits his costume but misses him entirely.  This&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;completely ruins his brand new costume his mother bought him, which&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;makes him fly into an insane rage and blast you repeatedly in the face until&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;you are dead.  Then he eats you.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;dodge!&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Like a world class boxer you dodge, weave, slip and slide right&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;as the Gothon&#39;s blaster cranks a laser past your head.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;In the middle of your artful dodge your foot slips and you&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;bang your head on the metal wall and pass out.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You wake up shortly after only to die as the Gothon stomps on&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;your head and eats you.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;tell a joke&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Lucky for you they made you learn Gothon insults in the academy.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You tell the one Gothon joke you know:&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;The Gothon stops, tries not to laugh, then busts out laughing and can&#39;t move.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;While he&#39;s laughing you run up and shoot him square in the head&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;putting him down, then jump through the Weapon Armory door.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:laser_weapon_armory</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:central_corridor</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">laser_weapon_armory</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You do a dive roll into the Weapon Armory, crouch and scan the room&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;for more Gothons that might be hiding.  It&#39;s dead quiet, too quiet.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You stand up and run to the far side of the room and find the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;neutron bomb in its container.  There&#39;s a keypad lock on the box&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and you need the code to get the bomb out.  If you get the code&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;wrong 10 times then the lock closes forever and you can&#39;t&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;get the bomb.  The code is 3 digits.&quot;</span>
</span><span class='line'>    <span class="n">code</span> <span class="o">=</span> <span class="s2">&quot;%s%s%s&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>    <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>    <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">code</span> <span class="ow">and</span> <span class="n">guesses</span> <span class="o">&lt;</span> <span class="mi">10</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;BZZZZEDDD!&quot;</span>
</span><span class='line'>      <span class="n">guesses</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>      <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">guess</span> <span class="o">==</span> <span class="n">code</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;The container clicks open and the seal breaks, letting gas out.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You grab the neutron bomb and run as fast as you can to the&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;bridge where you must place it in the right spot.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;The lock buzzes one last time and then you hear a sickening&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;melting sound as the mechanism is fused together.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You decide to sit there, and finally the Gothons blow up the&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;ship from their ship and you die.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">the_bridge</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You burst onto the Bridge with the netron destruct bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;under your arm and surprise 5 Gothons who are trying to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;take control of the ship.  Each of them has an even uglier&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;clown costume than the last.  They haven&#39;t pulled their&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;weapons out yet, as they see the active bomb under your&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;arm and don&#39;t want to set it off.&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>    <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;throw the bomb&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;In a panic you throw the bomb at the group of Gothons&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;and make a leap for the door.  Right as you drop it a&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Gothon shoots you right in the back killing you.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;As you die you see another Gothon frantically try to disarm&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;the bomb. You die knowing they will probably blow up when&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;it goes off.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;slowly place the bomb&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You point your blaster at the bomb under your arm&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;and the Gothons put their hands up and start to sweat.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You inch backward to the door, open it, and then carefully&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;place the bomb on the floor, pointing your blaster at it.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You then jump back through the door, punch the close button&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;and blast the lock so the Gothons can&#39;t get out.&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Now that the bomb is placed you run to the escape pod to&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;get off this tin can.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:escape_pod</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">escape_pod</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You rush through the ship desperately trying to make it to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the escape pod before the whole ship explodes.  It seems like&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;hardly any Gothons are on the ship, so your run is clear of&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;interference.  You get to the chamber with the escape pods, and&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;now need to pick one to take.  Some of them could be damaged&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;but you don&#39;t have time to look.  There&#39;s 5 pods, which one&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;do you take?&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">good_pod</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;[pod #]&gt;&quot;</span>
</span><span class='line'>    <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">guess</span><span class="o">.</span><span class="n">to_i</span> <span class="o">!=</span> <span class="n">good_pod</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;The pod escapes out into the void of space, then&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;implodes as the hull ruptures, crushing your body&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;into jam jelly.&quot;</span>
</span><span class='line'>      <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;The pod easily slides out into space heading to&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;the planet below.  As it flies to the planet, you look&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;back and see your ship implode then explode like a&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;bright star, taking out the Gothon ship at the same&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;time.  You won!&quot;</span>
</span><span class='line'>      <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a_game</span> <span class="o">=</span> <span class="no">Game</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:central_corridor</span><span class="p">)</span>
</span><span class='line'><span class="n">a_game</span><span class="o">.</span><span class="n">play</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>你應該看到的結果</h2>

<p>這個版本的遊戲和你的上一版效果應該是一樣的，其實有些代碼都幾乎一樣。比較一下兩版程式碼，弄懂其中不同的地方，重點在需要理解這些東西：</p>

<ol>
<li>怎樣建立一個 <code>class</code> Game 並且放函式到裡面去。</li>
<li><code>initialize</code> 是一個特殊的初始方法，怎樣預設重要的變數在裡面。</li>
<li>你如何透過將在 <code>class</code> 下這個關鍵字再巢狀排列這些定義的方式為<code>class</code> 添加函式。</li>
<li>你如何透過在名稱底下加進巢狀內容來添加函式的。</li>
<li><code>@</code> 的概念，還有它在 <code>initialize</code>、<code>play</code> 和 <code>death</code> 是怎樣被使用的。</li>
<li>最後我們怎樣建立了一個 Game，然後透過 <code>play()</code>讓所有的東西運行起來。</li>
</ol>


<p>加分習題
研究一下<strong>dict</strong>是什麼東西，應該怎樣使用。
再為遊戲添加一些房間，確認自己已經學會使用<code>class</code> 。
創建一個新版本，裡邊使用兩個<code>class</code>，其中一個是Map，另一個是Engine。提示:把play放到Engine裡面。</p>

<h2>加分習題</h2>

<ol>
<li>再為遊戲添加一些房間，確認自己已經學會使用 <code>class</code>。</li>
<li>建一個新版本，裡邊使用兩個 <code>class</code>，其中一個是 <code>Map</code>，另一個是 <code>Engine</code>。提示:把 play 放到 <code>Engine</code> 裡面。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 41: 來自 Percal 25 號行星的哥頓人(Gothons)]]></title>
    <link href="http://lrthw.github.com/ex41/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex41</id>
    <content type="html"><![CDATA[<p>你在上一節中發現 Hash 的秘密功能了嗎？你可以解釋給自己嗎？讓我來給你解釋一下，順便和你自己的理解對比看有什麼不同。這裡是我們要討論的程式碼：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">]</span> <span class="o">=</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:find_city</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">].</span><span class="n">call</span><span class="p">(</span><span class="n">cities</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>你要記住一個函式也可以作為一個變數，為了要將一個程式碼區段儲存在一個變數裡，我們創造了一個東西叫「proc」，proc 是 procedure 縮寫。在這段程式碼中，首先我們呼叫了 Ruby 內建的函式 <code>method</code>，它會回傳一個 proc 版的 <code>find_city</code> 函式。然後我們將之除存在一個 Hash 裡：key 是 <code>:find</code>，value 是 <code>cities</code>。。這和我們將州和市關聯起來的程式碼做的事情一樣，只不過在這個情況裡是個 proc。</p>

<p>好了，所以一旦我們知道 <code>find_city</code> 是在Hash中 <code>:find</code> 的位置，這就意味著我們可以去呼叫它。第二行程式碼可以分解成如下步驟：</p>

<ol>
<li>Ruby 讀到了 <code>cities</code>，然後知道了它是一個 「Hash」。</li>
<li>然後看到了<code>[:find]</code>，於是 Ruby 就從索引找到了 cities Hash 中對應的位置，並且獲取了該位置的內容。</li>
<li><code>[:find]</code> 這個位置的內容是我們的函式 <code>find_city</code>，所以Ruby就知道了這裡表示一個函式，於是當它碰到<code>.call</code>就開始了 proc呼叫。</li>
<li><code>cities</code>、<code>state</code> 這兩個參數將被傳遞到函式 <code>find_city</code> 中，然後這個函式就被運行了。</li>
<li><code>find_city</code> 接著從 <code>cities</code> 中尋找 <code>states</code>，並且回傳它找到的內容，如果什麼都沒找到，就返回一個信息說它什麼都沒找到。</li>
<li>Ruby 接受 <code>find_city</code> 傳回的資訊，最後將該資訊賦值給一開始的 <code>city_found</code> 這個變數。</li>
</ol>


<p>我再教你一個小技巧。如果你倒著閱讀的話，程式碼可能會變得更容易理解。讓我們來試一下，一樣是那行：</p>

<ol>
<li><code>state</code> 和 <code>city</code> 是&#8230;</li>
<li>最為參數傳遞給&#8230;</li>
<li>一個 proc 位於&#8230;</li>
<li><code>:find</code> 然後尋找，目的地為&#8230;</li>
<li><code>cities</code> 這個 Hash&#8230;</li>
<li>最後印到螢幕上</li>
</ol>


<p>還有一種方法讀它，這回是「由裡向外」。</p>

<ol>
<li>找到表示式的中心位置，此次為<code>[:find]</code>。</li>
<li>逆時針追溯，首先看到的是一個叫 <code>cities</code>的 Hash，這樣就知道了 <code>cities</code> 中的 <code>:find</code> 元素。</li>
<li>上一步得到一個函式。繼續逆時針尋找，看到的是參數。</li>
<li>參數傳遞給函式後，函式會傳回一個值。然後再逆時針尋找。</li>
<li>最後，我們到了<code>city_found</code> =的賦值位置，並且得到了最終結果。</li>
</ol>


<p>數十年的程式經驗下來，我在讀程式碼的過程中已經用不到上面的三種方法了。我只要瞄一眼就能知道它的意思。甚至給我一整頁的程式碼，我也可以一眼瞄出裡邊的 bug 和錯誤。這樣的技能是花了超乎常人的時間和精力才鍛煉得來的。在磨練的過程中，我學會了下面三種讀程式碼的方法：</p>

<ol>
<li>從前向後。</li>
<li>從後向前。</li>
<li>逆時針方向。</li>
</ol>


<p>現在我們來寫這次的練習，寫完後再過一遍，這節習題其實挺有趣的。</p>

<p>程式碼不少，不過還是從頭寫完吧。確認它能運行，然後玩一下看看。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">death</span><span class="p">()</span>
</span><span class='line'>  <span class="n">quips</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;You died.  You kinda suck at this.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Nice job, you died ...jackass.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Such a luser.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;I have a small puppy that&#39;s better at this.&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">quips</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">quips</span><span class="o">.</span><span class="n">length</span><span class="p">())</span><span class="o">]</span>
</span><span class='line'>  <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">central_corridor</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The Gothons of Planet Percal #25 have invaded your ship and destroyed&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;your entire crew.  You are the last surviving member and your last&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;mission is to get the neutron destruct bomb from the Weapons Armory,&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;put it in the bridge, and blow the ship up after getting into an &quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;escape pod.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You&#39;re running down the central corridor to the Weapons Armory when&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;flowing around his hate filled body.  He&#39;s blocking the door to the&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Armory and about to pull a weapon to blast you.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;shoot!&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Quick on the draw you yank out your blaster and fire it at the Gothon.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;His clown costume is flowing and moving around his body, which throws&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;off your aim.  Your laser hits his costume but misses him entirely.  This&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;completely ruins his brand new costume his mother bought him, which&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;makes him fly into an insane rage and blast you repeatedly in the face until&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;you are dead.  Then he eats you.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;dodge!&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Like a world class boxer you dodge, weave, slip and slide right&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;as the Gothon&#39;s blaster cranks a laser past your head.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;In the middle of your artful dodge your foot slips and you&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bang your head on the metal wall and pass out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You wake up shortly after only to die as the Gothon stomps on&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;your head and eats you.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;tell a joke&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Lucky for you they made you learn Gothon insults in the academy.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You tell the one Gothon joke you know:&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The Gothon stops, tries not to laugh, then busts out laughing and can&#39;t move.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;While he&#39;s laughing you run up and shoot him square in the head&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;putting him down, then jump through the Weapon Armory door.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:laser_weapon_armory</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:central_corridor</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">laser_weapon_armory</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You do a dive roll into the Weapon Armory, crouch and scan the room&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;for more Gothons that might be hiding.  It&#39;s dead quiet, too quiet.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stand up and run to the far side of the room and find the&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;neutron bomb in its container.  There&#39;s a keypad lock on the box&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;and you need the code to get the bomb out.  If you get the code&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;wrong 10 times then the lock closes forever and you can&#39;t&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;get the bomb.  The code is 3 digits.&quot;</span>
</span><span class='line'>  <span class="n">code</span> <span class="o">=</span> <span class="s2">&quot;%s%s%s&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>  <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>  <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">code</span> <span class="ow">and</span> <span class="n">guesses</span> <span class="o">&lt;</span> <span class="mi">10</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;BZZZZEDDD!&quot;</span>
</span><span class='line'>    <span class="n">guesses</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>    <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">guess</span> <span class="o">==</span> <span class="n">code</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The container clicks open and the seal breaks, letting gas out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You grab the neutron bomb and run as fast as you can to the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bridge where you must place it in the right spot.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The lock buzzes one last time and then you hear a sickening&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;melting sound as the mechanism is fused together.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You decide to sit there, and finally the Gothons blow up the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;ship from their ship and you die.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">the_bridge</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You burst onto the Bridge with the netron destruct bomb&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;under your arm and surprise 5 Gothons who are trying to&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;take control of the ship.  Each of them has an even uglier&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;clown costume than the last.  They haven&#39;t pulled their&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;weapons out yet, as they see the active bomb under your&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;arm and don&#39;t want to set it off.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;throw the bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;In a panic you throw the bomb at the group of Gothons&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and make a leap for the door.  Right as you drop it a&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Gothon shoots you right in the back killing you.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;As you die you see another Gothon frantically try to disarm&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the bomb. You die knowing they will probably blow up when&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;it goes off.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;slowly place the bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You point your blaster at the bomb under your arm&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and the Gothons put their hands up and start to sweat.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You inch backward to the door, open it, and then carefully&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;place the bomb on the floor, pointing your blaster at it.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You then jump back through the door, punch the close button&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and blast the lock so the Gothons can&#39;t get out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Now that the bomb is placed you run to the escape pod to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;get off this tin can.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:escape_pod</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">escape_pod</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You rush through the ship desperately trying to make it to&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;the escape pod before the whole ship explodes.  It seems like&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hardly any Gothons are on the ship, so your run is clear of&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;interference.  You get to the chamber with the escape pods, and&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;now need to pick one to take.  Some of them could be damaged&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;but you don&#39;t have time to look.  There&#39;s 5 pods, which one&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;do you take?&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">good_pod</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;[pod #]&gt;&quot;</span>
</span><span class='line'>  <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">guess</span><span class="o">.</span><span class="n">to_i</span> <span class="o">!=</span> <span class="n">good_pod</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The pod escapes out into the void of space, then&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;implodes as the hull ruptures, crushing your body&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;into jam jelly.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The pod easily slides out into space heading to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the planet below.  As it flies to the planet, you look&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;back and see your ship implode then explode like a&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bright star, taking out the Gothon ship at the same&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;time.  You won!&quot;</span>
</span><span class='line'>    <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ROOMS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:death</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:death</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:central_corridor</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:central_corridor</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:laser_weapon_armory</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:laser_weapon_armory</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:the_bridge</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:the_bridge</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:escape_pod</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:escape_pod</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">runner</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">start</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">room</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">next_one</span><span class="o">]</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">--------&quot;</span>
</span><span class='line'>    <span class="n">next_one</span> <span class="o">=</span> <span class="n">room</span><span class="o">.</span><span class="n">call</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">runner</span><span class="p">(</span><span class="no">ROOMS</span><span class="p">,</span> <span class="ss">:central_corridor</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>你應該看到的結果</h2>

<pre><code>$ ruby ex41.rb

--------
The Gothons of Planet Percal #25 have invaded your ship and destroyed
your entire crew.  You are the last surviving member and your last
mission is to get the neutron destruct bomb from the Weapons Armory,
put it in the bridge, and blow the ship up after getting into an 
escape pod.


You're running down the central corridor to the Weapons Armory when
a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume
flowing around his hate filled body.  He's blocking the door to the
Armory and about to pull a weapon to blast you.
&gt; dodge!
Like a world class boxer you dodge, weave, slip and slide right
as the Gothon's blaster cranks a laser past your head.
In the middle of your artful dodge your foot slips and you
bang your head on the metal wall and pass out.
You wake up shortly after only to die as the Gothon stomps on
your head and eats you.

--------
Such a luser.

$ ruby ex41.rb 

--------
The Gothons of Planet Percal #25 have invaded your ship and destroyed
your entire crew.  You are the last surviving member and your last
mission is to get the neutron destruct bomb from the Weapons Armory,
put it in the bridge, and blow the ship up after getting into an 
escape pod.


You're running down the central corridor to the Weapons Armory when
a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume
flowing around his hate filled body.  He's blocking the door to the
Armory and about to pull a weapon to blast you.
&gt; tell a joke
Lucky for you they made you learn Gothon insults in the academy.
You tell the one Gothon joke you know:
Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr.
The Gothon stops, tries not to laugh, then busts out laughing and can't move.
While he's laughing you run up and shoot him square in the head
putting him down, then jump through the Weapon Armory door.

--------
You do a dive roll into the Weapon Armory, crouch and scan the room
for more Gothons that might be hiding.  It's dead quiet, too quiet.
You stand up and run to the far side of the room and find the
neutron bomb in its container.  There's a keypad lock on the box
and you need the code to get the bomb out.  If you get the code
wrong 10 times then the lock closes forever and you can't
get the bomb.  The code is 3 digits.
[keypad]&gt; 123 
BZZZZEDDD!
[keypad]&gt; 234
BZZZZEDDD!
[keypad]&gt; 345
BZZZZEDDD!
[keypad]&gt; 456
BZZZZEDDD!
[keypad]&gt; 567
BZZZZEDDD!
[keypad]&gt; 678
BZZZZEDDD!
[keypad]&gt; 789
BZZZZEDDD!
[keypad]&gt; 384
BZZZZEDDD!
[keypad]&gt; 764
BZZZZEDDD!
[keypad]&gt; 354
BZZZZEDDD!
[keypad]&gt; 263
The lock buzzes one last time and then you hear a sickening
melting sound as the mechanism is fused together.
You decide to sit there, and finally the Gothons blow up the
ship from their ship and you die.

--------
You died.  You kinda suck at this.
</code></pre>

<h2>加分習題</h2>

<ol>
<li>解釋一下返回至下一個房間的運作原理。
2.建立更多的房間，讓遊戲規模變大。</li>
<li>除了讓每個函式印出自己以外，試試學習一下「文件註解(doc comments)」。</li>
<li>看看你能不能將房間描述寫成文件註解，然後修改運行它的程式碼，讓它把文檔註解打印出來。</li>
<li>一旦你用了文件註解作為房間描述，你還需要讓這個函式打出用戶提示嗎？試著讓運行函數的代碼打出用戶提示來，然後將用戶輸入傳遞到各個函式。你的函式應該只是一些 <code>if</code> 語句組合，將結果印出來，並且返回下一個房間。</li>
<li>這其實是一個小版本的「有限狀態機(finite state machine)」，找資料閱讀了解一下，雖然你可能看不懂，但還是找來看看吧</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 40: Hash, 可愛的 Hash]]></title>
    <link href="http://lrthw.github.com/ex40/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex40</id>
    <content type="html"><![CDATA[<p>接下來我要教你另外一種讓你傷腦筋的容器型資料結構，因為一旦你學會這種資料結構，你將擁有超酷的能力。這是最有用的容器：Hash。</p>

<p>Ruby 將這種資料類型叫做「Hash」，有的語言裡它的名稱是「dictionaries」。這兩種名字我都會用到，不過這並不重要，重要的是它們和陣列的區別。你看，針對陣列你可以做這樣的事情：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">015</span> <span class="o">&gt;</span> <span class="n">things</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span><span class="s1">&#39;b&#39;</span><span class="p">,</span><span class="s1">&#39;c&#39;</span><span class="p">,</span><span class="s1">&#39;d&#39;</span><span class="o">]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span><span class="p">,</span> <span class="s2">&quot;c&quot;</span><span class="p">,</span> <span class="s2">&quot;d&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">016</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="n">things</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">b</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">017</span> <span class="o">&gt;</span> <span class="n">things</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;z&#39;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;z&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">01</span><span class="mi">8</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="n">things</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">z</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">01</span><span class="mi">9</span> <span class="o">&gt;</span> <span class="nb">print</span> <span class="n">things</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="s2">&quot;z&quot;</span><span class="p">,</span> <span class="s2">&quot;c&quot;</span><span class="p">,</span> <span class="s2">&quot;d&quot;</span><span class="o">]</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">020</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>你可以使用數字作為陣列的「索引」，也就是你可以通過數字找到陣列中的元素。而 Hash 所作的，是讓你可以通過任何東西找到元素，不只是數字。是的，Hash 可以將一個物件和另外一個東西關聯，不管它們的類型是什麼，我們來看看：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">001</span> <span class="o">&gt;</span> <span class="n">stuff</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s2">&quot;Rob&quot;</span><span class="p">,</span> <span class="ss">:age</span> <span class="o">=&gt;</span> <span class="mi">30</span><span class="p">,</span> <span class="ss">:height</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="o">*</span><span class="mi">12</span><span class="o">+</span><span class="mi">10</span><span class="p">}</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:name</span><span class="o">=&gt;</span><span class="s2">&quot;Rob&quot;</span><span class="p">,</span> <span class="ss">:age</span><span class="o">=&gt;</span><span class="mi">30</span><span class="p">,</span> <span class="ss">:height</span><span class="o">=&gt;</span><span class="mi">70</span><span class="p">}</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">002</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span>
</span><span class='line'><span class="no">Rob</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">003</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="ss">:age</span><span class="o">]</span>
</span><span class='line'><span class="mi">30</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">004</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="ss">:height</span><span class="o">]</span>
</span><span class='line'><span class="mi">70</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">005</span> <span class="o">&gt;</span> <span class="n">stuff</span><span class="o">[</span><span class="ss">:city</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;New York&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;New York&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">006</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="ss">:city</span><span class="o">]</span>
</span><span class='line'><span class="no">New</span> <span class="no">York</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">007</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>你將看到除了通過數字以外，我們在 Ruby 還可以用字串來從 Hash 中獲取 <code>stuff</code>，我們還可以用字串來往 Hash 中添加元素。當然它支持的不只有字串，我們還可以做這樣的事情：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">004</span> <span class="o">&gt;</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Wow&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;Wow&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">005</span> <span class="o">&gt;</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Neato&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;Neato&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">006</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="no">Wow</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">007</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="no">Neato</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">00</span><span class="mi">8</span> <span class="o">&gt;</span> <span class="nb">puts</span> <span class="n">stuff</span>
</span><span class='line'><span class="p">{</span><span class="ss">:name</span><span class="o">=&gt;</span><span class="s2">&quot;Rob&quot;</span><span class="p">,</span> <span class="ss">:age</span><span class="o">=&gt;</span><span class="mi">30</span><span class="p">,</span> <span class="ss">:height</span><span class="o">=&gt;</span><span class="mi">70</span><span class="p">,</span> <span class="ss">:city</span><span class="o">=&gt;</span><span class="s2">&quot;New York&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="o">=&gt;</span><span class="s2">&quot;Wow&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="o">=&gt;</span><span class="s2">&quot;Neato&quot;</span><span class="p">}</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">00</span><span class="mi">9</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在這裡我使用了數字。其實我可以使用任何東西，不過這麼說並不准確，不過你先這麼理解就行了。</p>

<p>當然了，一個只能放東西進去的 Hash是沒啥意思的，所以我們還要有刪除物件的方法，也就是使用 <code>delete</code> 這個關鍵字：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">00</span><span class="mi">9</span> <span class="o">&gt;</span> <span class="n">stuff</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:city</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;New York&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">010</span> <span class="o">&gt;</span> <span class="n">stuff</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;Wow&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">011</span> <span class="o">&gt;</span> <span class="n">stuff</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;Neato&quot;</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">012</span> <span class="o">&gt;</span> <span class="n">stuff</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:name</span><span class="o">=&gt;</span><span class="s2">&quot;Rob&quot;</span><span class="p">,</span> <span class="ss">:age</span><span class="o">=&gt;</span><span class="mi">30</span><span class="p">,</span> <span class="ss">:height</span><span class="o">=&gt;</span><span class="mi">70</span><span class="p">}</span>
</span><span class='line'><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">-</span><span class="n">p180</span> <span class="p">:</span><span class="mo">013</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來我們要做一個練習，你必須「非常」仔細，我要求你將這個練習寫下來，然後試著弄懂它做了些什麼。這個練習很有趣，做完以後你可能會有豁然開朗的感覺。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cities</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;CA&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;San Francisco&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;MI&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Detroit&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;FL&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Jacksonville&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;NY&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;New York&#39;</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;OR&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;Portland&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">find_city</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">map</span><span class="o">.</span><span class="n">include?</span> <span class="n">state</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map</span><span class="o">[</span><span class="n">state</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="s2">&quot;Not found.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ok pay attention!</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">]</span> <span class="o">=</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:find_city</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;State? (ENTER to quit) &quot;</span>
</span><span class='line'>  <span class="n">state</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">break</span> <span class="k">if</span> <span class="n">state</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># this line is the most important ever! study!</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">].</span><span class="n">call</span><span class="p">(</span><span class="n">cities</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>你應該看到的結果</h2>

<pre><code>$ ruby ex40.rb 
State? (ENTER to quit) &gt; CA
San Francisco
State? (ENTER to quit) &gt; FL
Jacksonville
State? (ENTER to quit) &gt; O
Not found.
State? (ENTER to quit) &gt; OR
Portland
State? (ENTER to quit) &gt; VT
Not found.
State? (ENTER to quit) &gt;
</code></pre>

<h2>加分習題</h2>

<ol>
<li>在 Ruby 文件中找到 Hash 相關的內容，學著對 Hash 做更多的操作。</li>
<li>找出一些 Hash 無法做到的事情。例如比較重要的一個就是 Hash 的內容是無序的，你可以檢查一下看看是否真是這樣。</li>
<li>試著把 <code>for</code> 迴圈執行到 Hash 上面，然後試著在 <code>for</code> 迴圈中使用 Hash 的 each 函式，看看會有什麼樣的結果。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 39: 陣列的操作]]></title>
    <link href="http://lrthw.github.com/ex39/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex39</id>
    <content type="html"><![CDATA[<p>你已經學過了陣列。在你學習“<code>while</code> 迴圈的時候，你對陣列進行過「pushed」動作，而且將陣列的內容印了出來。另外你應該還在加分習題裡研究過 Ruby 文件，看了陣列支援的其他操作。這已經是一段時間以前了，所以如果你不記得了的話，就回到本書的前面再複習一遍吧。</p>

<p>找到了嗎？還記得嗎？很好。那時候你對一個陣列執行了 <code>push</code> 函式。不過，你也許還沒有真正明白發生的事情，所以我們再來看看我們可以對陣列進行什麼樣的操作。</p>

<p>當你看到像 <code>mystuff.append('hello')</code>這樣的程式時，你事實上已經在 Ruby 內部激發了一個連鎖反應。以下是它的運作原理：</p>

<ol>
<li>Ruby 看到你用到了 <code>mystuff</code>，於是就去找到這個變數。也許它需要倒著檢查看你有沒有在哪裡用 <code>=</code> 建立過這個變數，或者檢查它是不是一個函式參數，或者看它是不是一個全局變數。不管哪種方式，它得先找到 <code>mystuff</code> 這個變數才行。</li>
<li>一旦它找到了 <code>mystuff</code>，就輪到處理句點 <code>.</code> (period)這個操作符號，而且開始查看 <code>mystuff</code> 內部的一些變數了。由於 <code>mystuff</code> 是一個陣列，Ruby 知道 <code>mystuff</code> 支援一些函式。</li>
<li>接下來輪到了處理 <code>push</code>。Ruby會將 「push」和 <code>mystuff</code> 支援的所有函式的名稱一一對比，如果確實其中有一個叫 <code>push</code> 的函式，那麼Ruby就會去使用這個函式。</li>
<li>接下來Ruby看到了括號(parenthesis)並且意識到, 「噢，原來這應該是一個函式」，到了這裡，它就正常會呼叫這個函式了，不過這裡的函式還要多一個參數才行。</li>
</ol>


<p>一下子要消化這麼多可能有點難度，不過我們將做幾個練習，讓你頭腦中有一個深刻的印象。下面的練習將字符串和列表混在一起，看看你能不能在裡邊找出點樂子來：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ten_things</span> <span class="o">=</span> <span class="s2">&quot;Apples Oranges Crows Telephone Light Sugar&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Wait there&#39;s not 10 things in that list, let&#39;s fix that.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">stuff</span> <span class="o">=</span> <span class="n">ten_things</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">more_stuff</span> <span class="o">=</span> <span class="sx">%w(Day Night Song Frisbee Corn Banana Girl Boy)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">stuff</span><span class="o">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">10</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">more_stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding: </span><span class="si">#{</span><span class="n">next_one</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">stuff</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">next_one</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s </span><span class="si">#{</span><span class="n">stuff</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="s2"> items now.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;There we go: </span><span class="si">#{</span><span class="n">stuff</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s do some things with stuff.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span> <span class="c1"># whoa! fancy</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span> <span class="c1"># what? cool!</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;#&#39;</span><span class="p">)</span> <span class="c1"># super stellar!</span>
</span></code></pre></td></tr></table></div></figure>


<h2>你應該看到的結果</h2>

<pre><code>$ ruby ex39.rb 
Wait there's not 10 things in that list, let's fix that.
Adding: Boy
There's 7 items now.
Adding: Girl
There's 8 items now.
Adding: Banana
There's 9 items now.
Adding: Corn
There's 10 items now.
There we go: ["Apples", "Oranges", "Crows", "Telephone", "Light", "Sugar", "Boy", "Girl", "Banana", "Corn"]
Let's do some things with stuff.
Oranges
Corn
Corn
Apples Oranges Crows Telephone Light Sugar Boy Girl Banana
Telephone#Sugar
$
</code></pre>

<h2>加分習題</h2>

<ol>
<li>上網閱讀一些關於「物件導向程式(Object Oriented Programming)」的資料。暈了吧？嗯，我以前也是。別擔心。你將從這本書學到足夠用的關於物件導向程式的基礎知識，而以後你還可以慢慢學到更多。</li>
<li><code>something.methods</code> 和 something的 class 有什麼關係？</li>
<li>如果你不知道我講的是些什麼東西，別擔心。程式設計師為了顯得自己聰明，於是就發明了Opject Oriented Programming，簡稱為OOP，然後他們就開始濫用這個東西了。如果你覺得這東西太難，你可以開始學一下「函式式程式(functional programming)」。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 38: 閱讀程式碼]]></title>
    <link href="http://lrthw.github.com/ex38/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex38</id>
    <content type="html"><![CDATA[<p>現在去找一些 Ruby 程式碼閱讀一下。你需要自己找程式碼，然後從中學習一些東西。你學到的東西已經足夠讓你看懂一些程式碼了，但你可能還無法理解這些程式碼的功能。這節課我要教給你的是：如何運用你學到的東西理解別人的程式碼。</p>

<p>首先把你想要理解的程式碼印到紙上。沒錯，你需要印出來，因為和螢幕輸出相比，你的眼睛和大腦更習慣於接受紙質列印的內容。一次最多列印幾頁就可以了。</p>

<p>然後通讀你列印出來的代碼並做好標記，標記的內容包括以下幾個方面：</p>

<ol>
<li>函數以及函數的功能。</li>
<li>每個變數的初始賦值。</li>
<li>每個在程式的各個部分中多次出現的變數。它們以後可能會給你帶來麻煩。</li>
<li>任何不包含else的 <code>if</code> 語句。它們是正確的嗎？</li>
<li>任何可能沒有結束點的while循環。</li>
<li>最後一條，代碼中任何你看不懂的部分都記下來。</li>
</ol>


<p>接下來你需要通過註解的方式向自己解釋程式碼的含義。解釋各個函式的使用方法，各個變數的用途，以及任何其它方面的內容，只要能幫助你理解程式碼即可。</p>

<p>最後，在程式碼中比較難的各個部分，逐行或者逐個函式跟踪變數值。你可以再打印一份出來，在空白處寫出你要「追踪」的每個變數的值。</p>

<p>一旦你基本理解了程式碼的功能，回到電腦面前，在程式碼上重讀一次，看看能不能找到新的問題點。然後繼續找新的程式碼，用上述的方法去閱讀理解，直到你不再需要紙質列印為止。</p>

<h2>加分習題</h2>

<ol>
<li>研究一下什麼是「流程圖(flow chart)」，並學著畫一下。</li>
<li>如果你在讀程式碼的時候找出了錯誤，試著把它們改對，並把修改內容發給作者。</li>
<li>不使用紙質打印時，你可以使用註解符號#在程序中加入筆記。有時這些筆記會對後來的讀程式碼的人有很大的幫助。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 37: 複習各種符號]]></title>
    <link href="http://lrthw.github.com/ex37/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex37</id>
    <content type="html"><![CDATA[<p>現在該複習你學過的符號和 Ruby 關鍵字了，而且你在本節還會學到一些新的東西。我在這裡所作的是將所有的 Ruby 符號和關鍵字列出來，這些都是值得掌握的重點。</p>

<p>在這節課中，你需要複習每一個關鍵字，從記憶中想起它的作用並且寫下來，接著上網搜索它真正的功能。有些內容可能是無法搜索的，所以這對你可能有些難度，不過你還是需要堅持嘗試。</p>

<p>如果你發現記憶中的內容有誤，就在索引卡片上寫下正確的定義，試著將自己的記憶糾正過來。如果你就是不知道它的定義，就把它也直接寫下來，以後再做研究。</p>

<p>最後，將每一種符號和關鍵字用在程式裡，你可以用一個小程式來做，也可以盡量多寫一些程式來鞏固記憶。這裡的關鍵點是明白各個符號的作用，確認自己沒搞錯，如果搞錯了就糾正過來，然後將其用在程序裡，並且通過這樣的方式鞏固自己的記憶。</p>

<h2>Keywords（關鍵字）</h2>

<ul>
<li><code>alias</code></li>
<li><code>and</code></li>
<li><code>BEGIN</code></li>
<li><code>begin</code></li>
<li><code>break</code></li>
<li><code>case</code></li>
<li><code>class</code></li>
<li><code>def</code></li>
<li><code>defined?</code></li>
<li><code>do</code></li>
<li><code>else</code></li>
<li><code>elsif</code></li>
<li><code>END</code></li>
<li><code>end</code></li>
<li><code>ensure</code></li>
<li><code>false</code></li>
<li><code>for</code></li>
<li><code>if</code></li>
<li><code>in</code></li>
<li><code>module</code></li>
<li><code>next</code></li>
<li><code>nil</code></li>
<li><code>not</code></li>
<li><code>or</code></li>
<li><code>redo</code></li>
<li><code>rescue</code></li>
<li><code>retry</code></li>
<li><code>return</code></li>
<li><code>self</code></li>
<li><code>super</code></li>
<li><code>then</code></li>
<li><code>true</code></li>
<li><code>undef</code></li>
<li><code>unless</code></li>
<li><code>until</code></li>
<li><code>when</code></li>
<li><code>while</code></li>
<li><code>yield</code></li>
</ul>


<h2>資料類型</h2>

<p>針對每一種資料類型，都舉出一些例子來，例如針對 string，你可以舉出一些字。針對number，你可以舉出一些數字。</p>

<ul>
<li><strong>true</strong></li>
<li><strong>false</strong></li>
<li><strong>nil</strong></li>
<li><code>constants</code></li>
<li><code>strings</code></li>
<li><code>numbers</code></li>
<li><code>ranges</code></li>
<li><code>arrays</code></li>
<li><code>hashes</code></li>
</ul>


<h2>字串格式(String Formats)</h2>

<p>一樣的，在字符串中使用它們，確認它們的功能。</p>

<ul>
<li><code>\\</code></li>
<li><code>\'</code></li>
<li><code>\"</code></li>
<li><code>\a</code></li>
<li><code>\b</code></li>
<li><code>\f</code></li>
<li><code>\n</code></li>
<li><code>\r</code></li>
<li><code>\t</code></li>
<li><code>\v</code></li>
</ul>


<h2>Operators</h2>

<p>有些操作符號你可能還不熟悉，不過還是一一看過去，研究一下它們的功能，如果你研究不出來也沒關係，記錄下來日後解決。</p>

<ul>
<li><code>::</code></li>
<li><code>[]</code></li>
<li><code>**</code></li>
<li><code>-(unary)</code></li>
<li><code>+(unary) </code></li>
<li><code>! </code></li>
<li><code>~</code></li>
<li><code>*</code></li>
<li><code>/</code></li>
<li><code>%</code></li>
<li><code>+ </code></li>
<li><code>-</code></li>
<li><code>&lt;&lt;</code></li>
<li><code>&gt;&gt;</code></li>
<li><code>&amp;</code></li>
<li><code>|</code></li>
<li><code>&gt; </code></li>
<li><code>&gt;=</code></li>
<li><code>&lt;</code></li>
<li><code>&lt;=</code></li>
<li><code>&lt;=&gt;</code></li>
<li><code>== </code></li>
<li><code>===</code></li>
<li><code>!= </code></li>
<li><code>=~ </code></li>
<li><code>!~</code></li>
<li><code>&amp;&amp;</code></li>
<li><code>||</code></li>
<li><code>..</code></li>
<li><code>...</code></li>
</ul>


<p>花一個星期學習這些東西，如果你能提前完成就更好了。我們的目的是覆蓋到所有的符號類型，確認你已經牢牢記住它們。另外很重要的一點是這樣你可以找出自己還不知道哪些東西，為自己日後學習找到一些方向。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 36: 設計和測試]]></title>
    <link href="http://lrthw.github.com/ex36/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex36</id>
    <content type="html"><![CDATA[<p>現在你已經學會了「<code>if</code> 語句」，我將給你一些使用 <code>for</code> 迴圈和 <code>while</code> 迴圈的規則，一面你日後碰到麻煩。我還會教你一些測試的小技巧，以便你能發現自己程式的問題。最後，你將需要設計一個和上節類似的小遊戲，不過內容略有更改。</p>

<h2>If 語句的規則</h2>

<p>1.每一個「if語句」必伴隨須一個 <code>else</code>。
2. 如果這個 <code>else</code> 因為沒有意義，而永遠都沒被執行到，那你必須在 <code>else</code> 語句後面使用一個叫 <code>die</code> 的函式，讓它印出錯誤並死給你看，這和上一節的習題類似，這樣你可以找到很多的錯誤。
3. 千萬不要使用超過兩層的 <code>if</code> 語句，最好盡量保持只有 1 層。那你就需要把第二個 if 移到另一個函式裡面。
4. 將<code>if</code>語句當做段落來對待，其中的每一個 <code>if</code>、<code>elsif</code>、<code>else</code>組合就跟
一個段落的句子組合一樣。在這種組合的最前面和最後面留一個空行以作區分。
5. 你的布林測試應該很簡單，如果它們很複雜的話，你需要將它們的運算式先放到一個變數裡，並且為變數取一個好名字。</p>

<p>如果你遵循上面的規則，你就會寫出比大部分程式設計師都好的程式碼來。回到上一個練習中，看看我有沒有遵循這些規則，如果沒有的話，就將其改正過來。</p>

<blockquote><p><strong>Warning:</strong> 在日常寫程式中不要成為這些規則的奴隸。在訓練中，你需要通過這些規則的應用來鞏固你學到的知識，而在實際寫程式中這些規則有時其實很蠢。如果你覺得哪個規則很蠢，就別使用它。</p></blockquote>

<h2>Rules For Loops</h2>

<ol>
<li>只有在迴圈循環永不停止時使用 <code>while</code> 迴圈，這意味著你可能永遠都用不到。這條只有 Ruby 中成立，其他的語言另當別論。</li>
<li>其他類型的迴圈都使用 <code>for</code> 迴圈，尤其是在迴圈的對象數量固定或者有限的情況下。</li>
</ol>


<h2>除錯（Debug) 的小技巧</h2>

<ol>
<li>不要使用「debugger」。Debugger 所作的相當於對病人的全身掃描。你並不會得到某方面的有用資訊，而且你會發現它輸出的資訊太多，而且大部分沒有用，或者只會讓你更困惑。</li>
<li>最好的除錯技巧是使用 <code>puts</code> 或 <code>p</code> 在各個你想要檢查的關鍵環節將關鍵變數印出來，從而檢查哪裡是否有錯。</li>
<li>讓程式一部分一部分地運行起來。不要等一個很長的腳本寫完後才去運行它。寫一點，運行一點，再修改一點。</li>
</ol>


<h2>家庭作業</h2>

<p>寫一個和上節練習類似的遊戲。同類的任何題材的遊戲都可以，花一個星期讓它盡可能有趣一些。作為加分習題，你可以盡量多使用陣列、函式、以及模組（記得習題 13 嗎？），而且盡量多弄一些新的 Ruby 程式讓你的遊戲跑起來。</p>

<p>過有一點需要注意，你應該把遊戲的設計先寫出來。在你開始寫程式碼之前，你應該設計出遊戲的地圖，創建出玩家會碰到的房間、怪物、以及陷阱等環節。</p>

<p>一旦搞定了地圖，你就可以寫寫程式碼了。如果你發現地圖有問題，就調整一下地圖，讓寫程式碼和地圖互相符合。</p>

<p>最後一個建議：每一個程式設計師在開始一個新的大項目時，都會被非理性的恐懼影響到。為了避免這種恐懼，他們會拖延時間，到最後一事無成。我有時會這樣，每個人都會有這樣的經歷，避免這種情況的最好的方法是把自己要做的事情列出來，一次完成一樣。</p>

<p>開始做吧。先做一個小一點的版本，擴充它讓它變大，把自己要完成的事情一一列出來，然後逐個完成就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[習題 35: 分支 (Branches) 和函式 (Functions)]]></title>
    <link href="http://lrthw.github.com/ex35/"/>
    <updated>2011-07-19T00:00:00+08:00</updated>
    <id>http://lrthw.github.com/ex35</id>
    <content type="html"><![CDATA[<p>你已經學會了 <code>if</code> 語句、函式、還有陣列。現在你要練習扭轉一下思維了。把下面的代碼寫下來，看你是否能弄懂它實現的是什麼功能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">gold_room</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;This room is full of gold.  How much do you take?&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">next_move</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">next_move</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;0&quot;</span> <span class="ow">or</span> <span class="n">next_move</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>    <span class="n">how_much</span> <span class="o">=</span> <span class="n">next_move</span><span class="o">.</span><span class="n">to_i</span><span class="p">()</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">dead</span><span class="p">(</span><span class="s2">&quot;Man, learn to type a number.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">how_much</span> <span class="o">&lt;</span> <span class="mi">50</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Nice, you&#39;re not greedy, you win!&quot;</span>
</span><span class='line'>    <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">dead</span><span class="p">(</span><span class="s2">&quot;You greedy bastard!&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">bear_room</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There is a bear here.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The bear has a bunch of honey.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The fat bear is in front of another door.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;How are you going to move the bear?&quot;</span>
</span><span class='line'>  <span class="n">bear_moved</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">prompt</span><span class="p">;</span> <span class="n">next_move</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">next_move</span> <span class="o">==</span> <span class="s2">&quot;take honey&quot;</span>
</span><span class='line'>      <span class="n">dead</span><span class="p">(</span><span class="s2">&quot;The bear looks at you then slaps your face off.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">next_move</span> <span class="o">==</span> <span class="s2">&quot;taunt bear&quot;</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">bear_moved</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;The bear has moved from the door. You can go through it now.&quot;</span>
</span><span class='line'>      <span class="n">bear_moved</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">next_move</span> <span class="o">==</span> <span class="s2">&quot;taunt bear&quot;</span> <span class="ow">and</span> <span class="n">bear_moved</span>
</span><span class='line'>      <span class="n">dead</span><span class="p">(</span><span class="s2">&quot;The bear gets pissed off and chews your leg off.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">next_move</span> <span class="o">==</span> <span class="s2">&quot;open door&quot;</span> <span class="ow">and</span> <span class="n">bear_moved</span>
</span><span class='line'>      <span class="n">gold_room</span><span class="p">()</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;I got no idea what that means.&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">cthulu_room</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Here you see the great evil Cthulu.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;He, it, whatever stares at you and you go insane.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Do you flee for your life or eat your head?&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">next_move</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">next_move</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;flee&quot;</span>
</span><span class='line'>    <span class="n">start</span><span class="p">()</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">next_move</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;head&quot;</span>
</span><span class='line'>    <span class="n">dead</span><span class="p">(</span><span class="s2">&quot;Well that was tasty!&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">cthulu_room</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">dead</span><span class="p">(</span><span class="n">why</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">why</span><span class="si">}</span><span class="s2">  Good job!&quot;</span>
</span><span class='line'>  <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">start</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You are in a dark room.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There is a door to your right and left.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Which one do you take?&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">next_move</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">next_move</span> <span class="o">==</span> <span class="s2">&quot;left&quot;</span>
</span><span class='line'>    <span class="n">bear_room</span><span class="p">()</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">next_move</span> <span class="o">==</span> <span class="s2">&quot;right&quot;</span>
</span><span class='line'>    <span class="n">cthulu_room</span><span class="p">()</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">dead</span><span class="p">(</span><span class="s2">&quot;You stumble around the room until you starve.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">start</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>你應該看到的結果</h2>

<p>你可以結果：</p>

<pre><code>$ ruby ex35.rb
You are in a dark room.
There is a door to your right and left.
Which one do you take?
&gt; left
There is a bear here.
The bear has a bunch of honey.
The fat bear is in front of another door.
How are you going to move the bear?
&gt; taunt bear
The bear has moved from the door. You can go through it now.
&gt; open door
This room is full of gold.  How much do you take?
&gt; asf
Man, learn to type a number. Good job!
$
</code></pre>

<h2>加分習題</h2>

<ol>
<li>把這個遊戲的地圖畫出來，把自己的路線也畫出來。</li>
<li>改正你所有的錯誤，包括拼寫錯誤。</li>
<li>為你不懂的函式寫註解。記得 <strong>RDoc</strong> 中的註釋嗎？</li>
<li>為遊戲添加更多元素。通過怎樣的方式可以簡化並且擴充遊戲的功能呢？</li>
<li>這個 gold_room 遊戲使用了奇怪的方式讓你鍵入一個數字。這種方式會導致什麼樣的bug？你可以用比檢查 0、1更好的方式判斷輸入是否是數字嗎？ <code>to_i()</code> 這個函式可以給你一些頭緒。</li>
</ol>

]]></content>
  </entry>
  
</feed>
